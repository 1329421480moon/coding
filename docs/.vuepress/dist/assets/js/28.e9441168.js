(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{296:function(t,e,a){"use strict";a.r(e);var r=a(0),s=Object(r.a)({},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"laravel-教程文档"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#laravel-教程文档","aria-hidden":"true"}},[t._v("#")]),t._v(" LARAVEL 教程文档")]),t._v(" "),a("blockquote",[a("p",[t._v("后盾人 www.houdunren.com  作者："),a("a",{attrs:{href:"http://www.aoxiangjun.com",target:"_blank",rel:"noopener noreferrer"}},[t._v("向军大叔"),a("OutboundLink")],1)])]),t._v(" "),a("h2",{attrs:{id:"介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#介绍","aria-hidden":"true"}},[t._v("#")]),t._v(" 介绍")]),t._v(" "),a("p",[t._v("Laravel是一套简洁、优雅的PHP Web开发框架(PHP Web Framework)。它可以让你从面条一样杂乱的代码中解脱出来；它可以帮你构建一个完美的网络APP，而且每行代码都可以简洁、富于表达力。")]),t._v(" "),a("p",[t._v("Laravel 是 基于 PHP 语言的 Web 开源框架，采用了 MVC 的架构模式，在 2011 年 6 月正式发布了首个版本。\n深度集成 PHP 强大的扩展包（Composer）生态与 PHP 开发者广大的受众群，让 Laravel 在发布之后的短短几年时间得到了极其迅猛的发展。我们通过 Google Trends 提供的趋势图（图 1.1）可以看出，Laravel 框架在过去十年，其增长速度迅猛。")]),t._v(" "),a("p",[a("img",{attrs:{src:"assets/FA2AB3FA-2B6F-4BC0-881B-03CB09668B37-0343581.png",alt:"FA2AB3FA-2B6F-4BC0-881B-03CB09668B37"}})]),t._v(" "),a("p",[a("strong",[t._v("laravel是GitHub上PHP项目排名第一的")])]),t._v(" "),a("p",[a("img",{attrs:{src:"assets/A7BA857C-974D-4B0D-A4F6-6D77E0F51743-0343658.png",alt:"A7BA857C-974D-4B0D-A4F6-6D77E0F51743"}})]),t._v(" "),a("h2",{attrs:{id:"版本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#版本","aria-hidden":"true"}},[t._v("#")]),t._v(" 版本")]),t._v(" "),a("h4",{attrs:{id:"lts"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#lts","aria-hidden":"true"}},[t._v("#")]),t._v(" Lts")]),t._v(" "),a("p",[t._v("Long-Term Support,长期技术支持（版本），该版本拥有较长的维护周期，是商业项目优先考虑使用的版本。")]),t._v(" "),a("h4",{attrs:{id:"常规版"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常规版","aria-hidden":"true"}},[t._v("#")]),t._v(" 常规版")]),t._v(" "),a("p",[t._v("提供6个月的bug修复，维护周期短但功能较新，学习为了使用新功能可采用这个版本。")]),t._v(" "),a("h2",{attrs:{id:"全新安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#全新安装","aria-hidden":"true"}},[t._v("#")]),t._v(" 全新安装")]),t._v(" "),a("p",[t._v("使用composer安装laravel框架")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("composer create-project --prefer-dist laravel/laravel blog\n")])])]),a("p",[t._v("安装完 Laravel 之后，你必须将 web 服务器更目录指向 "),a("code",[t._v("public")]),t._v(" 目录。该目录下的 "),a("code",[t._v("index.php")]),t._v(" 文件将作为所有进入应用程序的 HTTP 请求的前端控制器。")]),t._v(" "),a("p",[t._v("需要修改 "),a("code",[t._v(".env")]),t._v(" 配置文件中的 "),a("code",[t._v("APP_NAME")]),t._v(" 与 "),a("code",[t._v("APP_URL")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("APP_NAME=后盾人\nAPP_URL=http://houdunren.com\n")])])]),a("h2",{attrs:{id:"mysql低版本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mysql低版本","aria-hidden":"true"}},[t._v("#")]),t._v(" Mysql低版本")]),t._v(" "),a("p",[t._v("如果你是在版本低于 5.7.7 的 MySQL release 上创建索引，那就需要你手动配置迁移生成的默认字符串长度。")]),t._v(" "),a("p",[t._v("在 AppServiceProvider.php 文件里的 boot 方法里设置")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("public function boot()\n{\n \t\\Schema::defaultStringLength(191);\n}\n")])])]),a("h2",{attrs:{id:"下载他人项目"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#下载他人项目","aria-hidden":"true"}},[t._v("#")]),t._v(" 下载他人项目")]),t._v(" "),a("p",[t._v("检出别人的项目时，因为.env、verdor、node_moduels文件或目录是不提交到版本库的，造成检出后项目不能正常运行。需要以下几步处理：")]),t._v(" "),a("ol",[a("li",[t._v("composer install")]),t._v(" "),a("li",[t._v("cnpm install")]),t._v(" "),a("li",[t._v("复制 .env.example 文件为 .env文件")]),t._v(" "),a("li",[t._v("执行  "),a("code",[t._v("php artisan key:generate")]),t._v("  生成应用秘钥")]),t._v(" "),a("li",[t._v("修改 .env 配置文件其他数据为你网站数据（比如数据库配置等）")])]),t._v(" "),a("h2",{attrs:{id:"基本使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本使用","aria-hidden":"true"}},[t._v("#")]),t._v(" 基本使用")]),t._v(" "),a("h4",{attrs:{id:"路由"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#路由","aria-hidden":"true"}},[t._v("#")]),t._v(" 路由")]),t._v(" "),a("p",[t._v("laravel 的路由类型很多，为了对大家不造成学习压力。我们先讲解基础的使用，后面会深入讲到其他路由处理方式。")]),t._v(" "),a("p",[t._v("修改 routes/web.php 路由表文件。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Route::get('/home', 'TestController@home');\nRoute::get('/lists', 'TestController@lists');\nRoute::get('/show', 'TestController@show');\n")])])]),a("h4",{attrs:{id:"控制器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#控制器","aria-hidden":"true"}},[t._v("#")]),t._v(" 控制器")]),t._v(" "),a("p",[t._v("创建控制器")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("php artisan make:controller TestController\n")])])]),a("p",[t._v("内容如下：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("<?php namespace App\\Http\\Controllers;\nuse Illuminate\\Http\\Request;\nclass TestController extends Controller\n{\n\tpublic function home(){\n\t\treturn __METHOD__;\n\t}\n\n\tpublic function lists(){\n\t\treturn __METHOD__;\n\t}\n\n\tpublic function show(){\n\t\treturn __METHOD__;\n\t}\n}\n")])])]),a("p",[t._v("浏览器中访问 "),a("code",[t._v("http://laravel.hd/lists")]),t._v(" 显示内容如下")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("App\\Http\\Controllers\\TestController::lists\n")])])]),a("p",[t._v("以上就是laravel中基本路由与控制器的操作流程。")]),t._v(" "),a("h2",{attrs:{id:"视图"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#视图","aria-hidden":"true"}},[t._v("#")]),t._v(" 视图")]),t._v(" "),a("p",[t._v("视图就是我们显示的页面，视图保存在 "),a("code",[t._v("resources/views")]),t._v(" 文件夹中。")]),t._v(" "),a("h4",{attrs:{id:"继承"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#继承","aria-hidden":"true"}},[t._v("#")]),t._v(" 继承")]),t._v(" "),a("p",[t._v("模板继承是为了共用相同页面数据，减少代码冗余。")]),t._v(" "),a("p",[t._v("下面定义 views/layouts/master.blade.php 文件")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n\t<meta charset=\"UTF-8\">\n\t<title>\n\t\t@yield('title', '后盾人')\n\t</title>\n</head>\n<body>\n\t@yield('content')\n</body>\n</html>\n")])])]),a("p",[t._v("然后在子模板中引入父模板，并使用section替换父模板中yield定义的占位内容。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("@extends('layouts.master')\n@section('title','后盾人 - 首页')\n@section('content')\n\t<h1>首页1</h1>\n@endsection\n")])])])])},[],!1,null,null,null);e.default=s.exports}}]);