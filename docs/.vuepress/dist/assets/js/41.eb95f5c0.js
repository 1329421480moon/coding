(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{279:function(e,a,t){"use strict";t.r(a);var s=t(0),r=Object(s.a)({},function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"命名空间"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#命名空间","aria-hidden":"true"}},[e._v("#")]),e._v(" 命名空间")]),e._v(" "),t("blockquote",[t("p",[e._v("创作不易，转载请注明出处： 后盾人 @ houdurnen.com")])]),e._v(" "),t("h2",{attrs:{id:"使用场景"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用场景","aria-hidden":"true"}},[e._v("#")]),e._v(" 使用场景")]),e._v(" "),t("p",[e._v("大部分情况都需要多个文件才可以业务，这就会出现类名冲突的情况发生，命名空间可以解决这类问题人。")]),e._v(" "),t("p",[e._v("在操作系统中目录用来将文件管理，它就扮演了命名空间的角色。例如文件"),t("em",[e._v("foo.txt")]),e._v(" 可以同时在目录*/home/greg* 和 "),t("em",[e._v("/home/other")]),e._v(" 中存在，但在同一个目录中不能存在两个 "),t("em",[e._v("foo.txt")]),e._v(" 文件。另外，在目录 "),t("em",[e._v("/home/greg")]),e._v(" 外访问 "),t("em",[e._v("foo.txt")]),e._v(" 文件时，我们必须将目录名以及目录分隔符放在文件名之前得到*/home/greg/foo.txt*。这 个原理应用到程序设计领域就是命名空间的概念。")]),e._v(" "),t("h2",{attrs:{id:"基本使用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#基本使用","aria-hidden":"true"}},[e._v("#")]),e._v(" 基本使用")]),e._v(" "),t("p",[e._v("默认情况下常量、类和函数名都放在全局空间下。命名空间通过namespace 来声明。")]),e._v(" "),t("p",[e._v("namespace 必须定义在文件头部，并在"),t("code",[e._v("declare(strict_types=1)")]),e._v(" 语句下面。")]),e._v(" "),t("p",[t("strong",[e._v("helper.php")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("function sum()\n{\n    return 'helper sum';\n}\n")])])]),t("p",[t("strong",[e._v("test.php")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("namespace Houdunren;\n\ninclude 'helper.php';\nfunction sum()\n{\n    return 'houdunren sum';\n}\n# 使用当前命名空间中的sum\necho sum();\n# 使用 helper.php 中的sum\necho \\sum();\n")])])]),t("ul",[t("li",[e._v("不指定命名空间时将使用当前命名空间")]),e._v(" "),t("li",[e._v("如果命名空间中的函数或常量未定义，将会使用全局命名空间")])]),e._v(" "),t("h2",{attrs:{id:"子命名空间"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#子命名空间","aria-hidden":"true"}},[e._v("#")]),e._v(" 子命名空间")]),e._v(" "),t("p",[e._v("PHP 命名空间也允许指定层次化的命名空间的名称，如 "),t("code",[e._v("App\\Controller")]),e._v(" 形式，一般情况下我们将层次与目录结构匹配。")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("namespace App\\Controller;\n\nclass Bootstrap\n{\n    public function make()\n    {\n        return __METHOD__;\n    }\n}\n")])])]),t("h2",{attrs:{id:"引入方式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#引入方式","aria-hidden":"true"}},[e._v("#")]),e._v(" 引入方式")]),e._v(" "),t("h3",{attrs:{id:"非限定名称"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#非限定名称","aria-hidden":"true"}},[e._v("#")]),e._v(" "),t("strong",[e._v("非限定名称")])]),e._v(" "),t("p",[e._v("调用类时没有指定命名空间时，将使用当前命名空间。")]),e._v(" "),t("p",[e._v("下面在使用"),t("code",[e._v("User")]),e._v(" 时没有指定命名空间将使用当前命名空间。")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("namespace App;\n\nclass User\n{\n    public function make()\n    {\n        return __METHOD__;\n    }\n}\n\n$user = new User;\necho $user->make();\n")])])]),t("h3",{attrs:{id:"限定名称"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#限定名称","aria-hidden":"true"}},[e._v("#")]),e._v(" 限定名称")]),e._v(" "),t("p",[e._v("限定名称类似于文件系统中的相对路径 。")]),e._v(" "),t("p",[t("strong",[e._v("Order.php")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("namespace App\\Controller;\n\nclass Order\n{\n    public static function make()\n    {\n        return __METHOD__;\n    }\n}\n")])])]),t("p",[t("strong",[e._v("Test.php")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("namespace App;\n\ninclude 'Order.php';\nclass User\n{\n    public static function make()\n    {\n        return __METHOD__;\n    }\n}\necho Controller\\Order::make();\n")])])]),t("p",[e._v("使用限定名称调用 "),t("code",[e._v("Order")]),e._v(" 类，系统会使用当前命名空间加上 "),t("code",[e._v("Controller")]),e._v(" 做为"),t("code",[e._v("Order")]),e._v(" 类的命名空间。")]),e._v(" "),t("h3",{attrs:{id:"完全限定名称"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#完全限定名称","aria-hidden":"true"}},[e._v("#")]),e._v(" 完全限定名称")]),e._v(" "),t("p",[e._v("类似于文件系统中的绝对路径，以下面的代码为例，调用Order类时可以使用以下的完全限定方式。")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("echo \\App\\Controller\\Order::make();\n")])])]),t("h2",{attrs:{id:"常量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#常量","aria-hidden":"true"}},[e._v("#")]),e._v(" 常量")]),e._v(" "),t("p",[e._v("常量**"),t("strong",[e._v("NAMESPACE")]),e._v("**的值是包含当前命名空间名称的字符串。")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("<?php\nnamespace App;\n\nfunction factory($class)\n{\n    return __NAMESPACE__ . '\\\\' . $class;\n}\nclass User\n{\n    public static function make()\n    {\n        return __METHOD__;\n    }\n}\nclass Order\n{\n    public static function make()\n    {\n        return __METHOD__;\n    }\n}\necho factory('Order')::make();\n\n")])])]),t("p",[e._v("使用 "),t("code",[e._v("namespace")]),e._v(" 关键字")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("<?php\nnamespace App;\nclass Order\n{\n    public static function make()\n    {\n        return __METHOD__;\n    }\n}\necho namespace\\Order::make();\n")])])]),t("h2",{attrs:{id:"别名引入"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#别名引入","aria-hidden":"true"}},[e._v("#")]),e._v(" 别名引入")]),e._v(" "),t("p",[e._v("通过操作符 use 来为类或命名空间使用别名。")]),e._v(" "),t("h3",{attrs:{id:"基本使用-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#基本使用-2","aria-hidden":"true"}},[e._v("#")]),e._v(" 基本使用")]),e._v(" "),t("p",[e._v("本实例使用的示例目录结构如下：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("App\n--Controller\n\t-- Comment.php\n\t-- User.php\nboot.php\n")])])]),t("p",[t("strong",[e._v("boot.php")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("namespace Houdunren;\n\nuse App\\Controller\\User;\ninclude 'App/Controller/User.php';\necho User::make();\n")])])]),t("p",[e._v("如果使用  "),t("code",[e._v("use App\\Controller")]),e._v("，在引入 "),t("code",[e._v("User")]),e._v(" 类时方法如下")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("Controller\\User::make()\n")])])]),t("h3",{attrs:{id:"别名"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#别名","aria-hidden":"true"}},[e._v("#")]),e._v(" 别名")]),e._v(" "),t("p",[e._v("在引入多个同名类时会有冲突情况发生，可以通过起别名的方式处理。")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("namespace Houdunren;\n\nuse App\\Controller\\User as Member;\n\ninclude 'App/Controller/User.php';\n\necho Member::make();\n")])])]),t("h3",{attrs:{id:"多个引入"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#多个引入","aria-hidden":"true"}},[e._v("#")]),e._v(" 多个引入")]),e._v(" "),t("p",[e._v("可以使用多行 "),t("code",[e._v("use")]),e._v(" 或用逗号分隔多个类（空间）形式处理多个导入的情况。")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("namespace Houdunren;\n\nuse App\\Controller\\User as Member;\nuse App\\Controller\\Comment;\n\ninclude 'App/Controller/User.php';\ninclude 'App/Controller/Comment.php';\n\necho Member::make();\n\n")])])]),t("p",[e._v("使用逗号分隔")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("<?php\n...\nuse App\\Controller\\User as Member, App\\Controller\\Comment;\n...\n")])])]),t("h2",{attrs:{id:"自动加载"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#自动加载","aria-hidden":"true"}},[e._v("#")]),e._v(" 自动加载")]),e._v(" "),t("h3",{attrs:{id:"注册加载"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#注册加载","aria-hidden":"true"}},[e._v("#")]),e._v(" 注册加载")]),e._v(" "),t("p",[e._v("以往的__autoload 自动加载函数已经在 php7.2 废弃使用，所以使用 "),t("code",[e._v("spl_autoload_register")]),e._v(" 函数完成自动加载处理。")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("spl_autoload_register(function (string $class) {\n    $file = str_replace('\\\\', '/', $class) . '.php';\n    if (!is_file($file)) {\n        throw new \\Exception(\"file don't exists\");\n    }\n    require $file;\n});\n")])])]),t("p",[e._v("使用类方法实现")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("class Bootstrap\n{\n    public function autoload($class)\n    {\n        $file = str_replace('\\\\', '/', $class) . '.php';\n        if (!is_file($file)) {\n            throw new \\Exception(\"file don't exists\");\n        }\n        require $file;\n    }\n}\nspl_autoload_register([new Bootstrap, 'autoload']);\n")])])]),t("h3",{attrs:{id:"composer"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#composer","aria-hidden":"true"}},[e._v("#")]),e._v(" composer")]),e._v(" "),t("p",[e._v("使用composer 是"),t("code",[e._v("后盾人")]),e._v(" 建议使用的方式，"),t("code",[e._v("composer")]),e._v("相关视频已经在 "),t("code",[e._v("houdunren.com")]),e._v("上更新，下面简略介绍使用方法。")]),e._v(" "),t("p",[t("strong",[e._v("项目初始")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$ composer init\n")])])]),t("p",[e._v("直行上面命令并一直回车下去")]),e._v(" "),t("p",[t("strong",[e._v("修改配置文件")])]),e._v(" "),t("p",[e._v("个性 "),t("code",[e._v("composer.json")]),e._v(" 配置文件，其中 "),t("code",[e._v("autoload")]),e._v("配置项是自动加载设置。")]),e._v(" "),t("ul",[t("li",[e._v("files 是自动加载文件列表，适合于加载函数")]),e._v(" "),t("li",[e._v("psr-4 自动加载命名空间与目录对应关系")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('{\n    "name": "hd/php",\n    "authors": [\n        {\n            "name": "houdunren.com",\n            "email": "2300071698@qq.com"\n        }\n    ],\n    "autoload": {\n        "files": [\n            "App/helper.php"\n        ],\n        "psr-4": {\n            "App\\\\": "App"\n        }\n    },\n    "require": {}\n}\n')])])]),t("h3",{attrs:{id:"安装与更新"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装与更新","aria-hidden":"true"}},[e._v("#")]),e._v(" 安装与更新")]),e._v(" "),t("p",[e._v("修改配置文件后执行 "),t("code",[e._v("composer install")]),e._v(" 生成vendor，如果修改过配置文件需要执行 "),t("code",[e._v("composer update")]),e._v("。")]),e._v(" "),t("h3",{attrs:{id:"配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#配置","aria-hidden":"true"}},[e._v("#")]),e._v(" 配置")]),e._v(" "),t("p",[e._v("在项目中使用以下代码即可完成自动加载。")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("include 'vendor/autoload.php';\n")])])])])},[],!1,null,null,null);a.default=r.exports}}]);