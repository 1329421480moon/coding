(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{261:function(t,a,e){"use strict";e.r(a);var r=e(0),_=Object(r.a)({},function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("blockquote",[e("p",[t._v("请尊重版权转载请注明出处： "),e("strong",[t._v("后盾人 @ houdurnen.com")])])]),t._v(" "),e("h1",{attrs:{id:"正则表达式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#正则表达式","aria-hidden":"true"}},[t._v("#")]),t._v(" 正则表达式")]),t._v(" "),e("p",[t._v("正则表达式被用来检索或替换那些符合某个模式的文本内容。\n许多程序设计语言都支持利用正则表达式进行字符串操作。例如：JavaScript、PHP、ASP、JAVA、Perl、C#、.NET、ColdFusion、Python、Visual Basic、MYSQL、LINUX、VI编辑器等等语言都支持正则表达式。")]),t._v(" "),e("p",[t._v("简单来说正则表达式就是完成字符串的增、删、改、查。")]),t._v(" "),e("h2",{attrs:{id:"定界符"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#定界符","aria-hidden":"true"}},[t._v("#")]),t._v(" 定界符")]),t._v(" "),e("p",[t._v("正则表达式语句需要由分隔符（定界符）闭合包裹，分隔符可以使任意非字母数字, 非反斜线, 非空白字符")]),t._v(" "),e("p",[t._v("经常使用的分隔符是正斜线(/), hash符号(#) 以及取反符号(~)。")]),t._v(" "),e("p",[t._v("建议使用//做为定界符,因为与js一致。")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("$status =  preg_match('/houdunren/', 'houdunren.com');\nvar_dump($status);\n")])])]),e("h2",{attrs:{id:"元字符"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#元字符","aria-hidden":"true"}},[t._v("#")]),t._v(" 元字符")]),t._v(" "),e("p",[t._v("元字符是正则表达式中的最小元素，只代表单一（一个）字符。下面是元字符列表")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("元字符")]),t._v(" "),e("th",[t._v("说明")]),t._v(" "),e("th",[t._v("范围")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("\\d")]),t._v(" "),e("td",[t._v("匹配任意一个数字")]),t._v(" "),e("td",[t._v("[0-9]")])]),t._v(" "),e("tr",[e("td",[t._v("\\D")]),t._v(" "),e("td",[t._v("与除了数字以外的任何一个字符匹配")]),t._v(" "),e("td",[t._v("[^0-9]")])]),t._v(" "),e("tr",[e("td",[t._v("\\w")]),t._v(" "),e("td",[t._v("与任意一个英文字母,数字或下划线匹配")]),t._v(" "),e("td",[t._v("[a-zA-Z_0-9]")])]),t._v(" "),e("tr",[e("td",[t._v("\\W")]),t._v(" "),e("td",[t._v("除了字母,数字或下划线外与任何字符匹配")]),t._v(" "),e("td",[t._v("[^a-zA-Z_0-9]")])]),t._v(" "),e("tr",[e("td",[t._v("\\s")]),t._v(" "),e("td",[t._v("与任意一个空白字符匹配")]),t._v(" "),e("td",[t._v("[\\n\\f\\r\\t\\v]")])]),t._v(" "),e("tr",[e("td",[t._v("\\S")]),t._v(" "),e("td",[t._v("与除了空白符外任意一个字符匹配")]),t._v(" "),e("td",[t._v("[^\\n\\f\\r\\t\\v]")])]),t._v(" "),e("tr",[e("td",[t._v("\\n")]),t._v(" "),e("td",[t._v("换行字符")]),t._v(" "),e("td")]),t._v(" "),e("tr",[e("td",[t._v("\\t")]),t._v(" "),e("td",[t._v("制表符")]),t._v(" "),e("td")])])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("var_dump(preg_match('/\\d/', '1'));\nvar_dump(preg_match('/\\D/', 'h'));\nvar_dump(preg_match('/\\w/', '_'));\nvar_dump(preg_match('/\\W/', '@'));\nvar_dump(preg_match('/\\s/', ' '));\nvar_dump(preg_match('/\\S/', 'h'));\nvar_dump(preg_match('/\\n/', \"\\n\"));\nvar_dump(preg_match('/\\n/', '\n'));\nvar_dump(preg_match('/\\t/', \"\\t\"));\n")])])]),e("h2",{attrs:{id:"元字符表（原子表）"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#元字符表（原子表）","aria-hidden":"true"}},[t._v("#")]),t._v(" 元字符表（原子表）")]),t._v(" "),e("p",[t._v("在一组字符中匹配某个元字符，在正则表达式中通过元字符表来完成，就是放到方括号中。")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("原子表")]),t._v(" "),e("th",[t._v("说明")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("[]")]),t._v(" "),e("td",[t._v("只匹配其中的一个原子")])]),t._v(" "),e("tr",[e("td",[t._v("[^]")]),t._v(" "),e("td",[t._v('只匹配"除了"其中字符的任意一个原子')])]),t._v(" "),e("tr",[e("td",[t._v("[0-9]")]),t._v(" "),e("td",[t._v("匹配0-9任何一个数字")])]),t._v(" "),e("tr",[e("td",[t._v("[a-z]")]),t._v(" "),e("td",[t._v("匹配小写a-z任何一个字母")])]),t._v(" "),e("tr",[e("td",[t._v("[A-Z]")]),t._v(" "),e("td",[t._v("匹配大写A-Z任何一个字母")])]),t._v(" "),e("tr",[e("td",[t._v(".")]),t._v(" "),e("td",[t._v("点在正则中表示除换行符外的任意字符")])])])]),t._v(" "),e("p",[t._v("匹配聊了 "),e("code",[t._v("678")]),t._v("外的任何字符")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("$status = preg_match('/[^678]/', 678);\nvar_dump($status);\n")])])]),e("p",[t._v("匹配大小写字母")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("$status = preg_match('/[a-zA-Z]/', 'a');\nvar_dump($status);\n")])])]),e("p",[t._v("用"),e("code",[t._v(".")]),t._v(" 匹配字符")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("$status = preg_match('/./', 'houdunren');\nvar_dump($status);\n")])])]),e("p",[t._v("下面是通过原子表拆分字符串")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("$str =\"1.jpg@2.jpg@3.jpg#4.jpg\";\n$arr = preg_split('/[@#]/',$str); //按正则表达式拆分字符串\nprint_r($arr); //输出结果 Array ( [0] => 1.jpg [1] => 2.jpg [2] => 3.jpg [3] => 4.jpg )\n")])])]),e("h2",{attrs:{id:"原子组"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#原子组","aria-hidden":"true"}},[t._v("#")]),t._v(" 原子组")]),t._v(" "),e("ul",[e("li",[t._v("如果一次要匹配多个元子，可以通过元子组完成")]),t._v(" "),e("li",[t._v("原子组与原子表的差别在于原子组一次匹配多个元子，而原子表则是匹配成功表中的一个元字符就可以")]),t._v(" "),e("li",[t._v("元字符组用（）表示")])]),t._v(" "),e("p",[t._v("下面是使用正则表达式将"),e("code",[t._v("houdunwang")]),t._v(" 字符中的 "),e("code",[t._v("houdun")]),t._v(" 描红。")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('$str = "官网www.houdunwang.com 论坛http://bbs.houdunwang.com，我在网名叫houdun";\n$preg = "/(houdun)wang/is";\n$newStr= preg_replace($preg, \'<span style="color:#f00">\\1</span>wang\', $str);\necho $newStr;\n')])])]),e("h2",{attrs:{id:"匹配字符边界"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#匹配字符边界","aria-hidden":"true"}},[t._v("#")]),t._v(" 匹配字符边界")]),t._v(" "),e("p",[t._v("如果想匹配字符的边界，边界包括空格、标点符号、换行等，可以使用正则表达式的匹配字符边界修饰符如下。")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("符号")]),t._v(" "),e("th",[t._v("说明")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("^")]),t._v(" "),e("td",[t._v("匹配字符串的开始")])]),t._v(" "),e("tr",[e("td",[t._v("$")]),t._v(" "),e("td",[t._v("匹配字符串的结束，忽略换行符")])])])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("$status = preg_match('/^houdunren$/', 'houdunren');\nvar_dump($status); //返回真\n")])])]),e("h2",{attrs:{id:"选择修释符"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#选择修释符","aria-hidden":"true"}},[t._v("#")]),t._v(" 选择修释符")]),t._v(" "),e("p",[t._v("| 这个符号带表选择修释符，也就是 | 左右两侧有一个匹配到就可以。")]),t._v(" "),e("p",[t._v("下面是通过选择修释符将域名修改为 "),e("code",[t._v("houdunren")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('$str = "http://www.baidu.com与新浪网http://www.sina.com";\n$preg = "/\\.(baidu|sina)\\./is";\necho preg_replace($preg, \'.houdunren.\', $str);\n')])])]),e("p",[t._v("匹配域名后缀")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("$str = '来了，老弟！有问题就上 houdunren.com 或 houdunwang.com 我们在那里等你';\n$preg = '/(houdunren|houdunwang)\\.com/';\n$replace = '<a href=\"http://www.\\1.com\">\\1.com</a>';\necho preg_replace($preg, $replace, $str);\n")])])]),e("h2",{attrs:{id:"重复匹配"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#重复匹配","aria-hidden":"true"}},[t._v("#")]),t._v(" 重复匹配")]),t._v(" "),e("p",[t._v("如果要重复匹配一些内容时我们要使用重复匹配修饰符，包括以下几种。")]),t._v(" "),e("p",[t._v("因为正则最小单位是元字符，而我们很少只匹配一个元字符如a、b所以基本上重复匹配在每条正则语句中都是必用到的内容")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("符号")]),t._v(" "),e("th",[t._v("说明")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("*")]),t._v(" "),e("td",[t._v("重复零次或更多次")])]),t._v(" "),e("tr",[e("td",[t._v("+")]),t._v(" "),e("td",[t._v("重复一次或更多次")])]),t._v(" "),e("tr",[e("td",[t._v("?")]),t._v(" "),e("td",[t._v("重复零次或一次")])]),t._v(" "),e("tr",[e("td",[t._v("{n}")]),t._v(" "),e("td",[t._v("重复n次")])]),t._v(" "),e("tr",[e("td",[t._v("{n,}")]),t._v(" "),e("td",[t._v("重复n次或更多次")])]),t._v(" "),e("tr",[e("td",[t._v("{n,m}")]),t._v(" "),e("td",[t._v("重复n到m次")])])])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("var_dump(preg_match('/^.*$/', '')); //* 零个及空字符串也是可以的\nvar_dump(preg_match('/^[0-9]+$/', '1976')); // 返回真\nvar_dump(preg_match('/^9?$/', '99')); // 返回假\nvar_dump(preg_match('/^9{2}$/', '99')); // 返回真\nvar_dump(preg_match('/^[0-9]{2,}$/', '123')); //返回真\nvar_dump(preg_match('/^[0-9]{2,3}$/', '1234')); // 返回假，只能2~3位\n")])])]),e("p",[t._v("下面匹配域名操作")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("$web = 'sina.com';\nvar_dump(preg_match('/^[a-z-0-9-]+\\.(com|net|com\\.cn|org|cn)$/', $web));\n")])])]),e("p",[t._v("下面是把 "),e("code",[t._v("h1")]),t._v("标签内容加上超链接")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("$str = <<<html\n<h1>hello houdunren</h1>\nhtml;\necho preg_replace('/<h1>(.+)<\\/h1>/', '<a href=\"http://www.houdunren.com\">\\1</a>', $str);\n")])])]),e("h2",{attrs:{id:"禁止重复匹配"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#禁止重复匹配","aria-hidden":"true"}},[t._v("#")]),t._v(" 禁止重复匹配")]),t._v(" "),e("p",[t._v("正则表达式在进行重复匹配时，默认是贪婪匹配模式，也就是说会尽量匹配更多内容，但是有的时候我们并不希望他匹配更多内容，这时可以通过?进行修饰来禁止重复匹配。")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("符号")]),t._v(" "),e("th",[t._v("说明")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("*?")]),t._v(" "),e("td",[t._v("重复任意次，但尽可能少重复")])]),t._v(" "),e("tr",[e("td",[t._v("+?")]),t._v(" "),e("td",[t._v("重复1次或更多次，但尽可能少重复")])]),t._v(" "),e("tr",[e("td",[t._v("??")]),t._v(" "),e("td",[t._v("重复0次或1次，但尽可能少重复")])]),t._v(" "),e("tr",[e("td",[t._v("{n,m}?")]),t._v(" "),e("td",[t._v("重复n到m次，但尽可能少重复")])]),t._v(" "),e("tr",[e("td",[t._v("{n,}?")]),t._v(" "),e("td",[t._v("重复n次以上，但尽可能少重复")])])])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("$str = '123456';\npreg_match('/\\d+?/',$str,$matches);\nprint_r($matches);\n")])])]),e("p",[t._v("因为增加了 "),e("code",[t._v("?")]),t._v(" 所以只匹配数字1")]),t._v(" "),e("p",[t._v("下面是使用禁止贪婪符替换将h1标签内容倾斜处理")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("$str = \"<h1>你好</h1><h1>向军大叔</h1>\";\n$preg = '/<h1>(.*?)<\\/h1>/';\n$replace = '<h1><em>\\1</em></h1>';\necho preg_replace($preg,$replace,$str);\n")])])]),e("p",[t._v("下面是替换h1-h6标签内容，就不需要使用禁止贪婪符了")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("$str = \"<h1>你好</h1><h2>向军大叔</h2>\";\n$preg = '/<h([1-6])>(.*)<\\/h\\1>/';\n$replace = '<h\\1><em>\\2</em></h\\1>';\necho preg_replace($preg,$replace,$str);\n")])])]),e("h2",{attrs:{id:"模式修正符"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#模式修正符","aria-hidden":"true"}},[t._v("#")]),t._v(" 模式修正符")]),t._v(" "),e("p",[t._v("正则表达式在执行时会按他们的默认执行方式进行，但有时候默认的处理方式总不能满足我们的需求，所以可以使用模式修正符更改默认方式。")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("符号")]),t._v(" "),e("th",[t._v("说明")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("i")]),t._v(" "),e("td",[t._v("不区分大小写字母的匹配")])]),t._v(" "),e("tr",[e("td",[t._v("s")]),t._v(" "),e("td",[t._v("将字符串视为单行，换行符做普通字符看待，使“.”\t匹 配任何字符")])]),t._v(" "),e("tr",[e("td",[t._v("x")]),t._v(" "),e("td",[t._v("忽略空白及#符号，根据此特性可以添加正则注释")])]),t._v(" "),e("tr",[e("td",[t._v("m")]),t._v(" "),e("td",[t._v("^与$符匹配按行匹配")])]),t._v(" "),e("tr",[e("td",[t._v("A")]),t._v(" "),e("td",[t._v("强制从字符串开始匹配（多行时默认以每行开始设置）")])]),t._v(" "),e("tr",[e("td",[t._v("D")]),t._v(" "),e("td",[t._v("以$结尾时不允许后面有换行（使用\\m时无效）")])])])]),t._v(" "),e("p",[t._v("\\i修正符不匹分大小示例")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("$str = 'https://www.HoudunREN.com 后盾人';\n$preg = '/https:\\/\\/www.houdunren.com/i';\n$replace= '<a href=\"\\0\">\\0</a>';\necho preg_replace($preg,$replace,$str);\n")])])]),e("p",[t._v("\\s 将字符串示为单行操作")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("$preg = '#(<h1>)(.*?)(</h1>)#s';\npreg_match_all($preg,$str,$matches);\n//print_r($matches);\n\n$replace = '\\1<span style=\"color:red\">\\2\\3';\necho preg_replace($preg,$replace,$str);\n")])])]),e("p",[e("code",[t._v("\\m")]),t._v(" 使用 ^ 与 $ 按单行操作文本")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("$str = <<<php\n#1 2022-02-12\n后盾人\n@#100\n雅虎网\n#2 2033-09-11\n向军大叔\nphp;\n$preg = '/^#\\d+.*[\\r|\\n]$/m';\npreg_match_all($preg, $str, $matches);\nprint_r($matches);\n")])])]),e("p",[t._v("\\x字符忽略空白和添加正则注释")]),t._v(" "),e("ol",[e("li",[e("p",[t._v("添加注释")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("$str='houdunren.com';\n$preg = '/^h\n   # 这是匹配以 h 开始的内容\n/x';\necho preg_replace($preg,'',$str);\n")])])])]),t._v(" "),e("li",[e("p",[t._v("当设置了\\x后"),e("code",[t._v("#")]),t._v(" 会被忽略，如果正则中使用#需要转义处理")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("$str=<<<php\n#1\n后盾人#1\n#2\n向军大叔#2\nphp;\n$preg = '/^\n\\#\\d  #匹配以数字开始\n+.* $ #后跟任何字符\n/mx';\necho preg_replace($preg,'',$str);\n")])])])])]),t._v(" "),e("p",[t._v("\\U 与?功能相似意为禁止贪婪匹配")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("$str = <<<php\n<h1>后盾人</h1>\n<h1>向军大叔</h1>\nphp;\n;\n$preg = '#<h1>.*</h1>#sU';\npreg_match_all($preg,$str,$matches);\nprint_r($mat\nches);\n")])])]),e("p",[t._v("\\A 与 ^限定符使用效果相似，必须以目标字符串开始。下面是验证邮箱例子")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("$str = '2300071698@qq.com';\n$preg = '/\\w+@[\\w\\.]+/A';\npreg_match_all($preg,$str,$matches);\nprint_r($matches);\n")])])]),e("p",[t._v("\\D 修正符使用不允许以换行结束")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("$str = <<<php\n3a\\n\nphp;\n$preg = '/\\d+a$/D';\npreg_match_all($preg,$str,$matches);\nprint_r($matches);\n")])])]),e("h2",{attrs:{id:"常用函数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#常用函数","aria-hidden":"true"}},[t._v("#")]),t._v(" 常用函数")]),t._v(" "),e("h3",{attrs:{id:"preg-match"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#preg-match","aria-hidden":"true"}},[t._v("#")]),t._v(" preg_match")]),t._v(" "),e("p",[t._v("获取第一个匹配的内容")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("$str= '1@2@3';\npreg_match('/\\d+/',$str,$matches);\nprint_r($matches);\n")])])]),e("h3",{attrs:{id:"preg-match-all"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#preg-match-all","aria-hidden":"true"}},[t._v("#")]),t._v(" preg_match_all")]),t._v(" "),e("p",[t._v("获取所有匹配的内容")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("$str= '1@2@3';\npreg_match('/\\d+/',$str,$matches);\nprint_r($matches);\n")])])]),e("h3",{attrs:{id:"preg-split"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#preg-split","aria-hidden":"true"}},[t._v("#")]),t._v(" preg_split")]),t._v(" "),e("p",[t._v("通过正则表达式拆分字符串")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("$str= '1@2#3';\n$arr = preg_split('/@|#/',$str);\nprint_r($arr);\n")])])]),e("h3",{attrs:{id:"preg-replace"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#preg-replace","aria-hidden":"true"}},[t._v("#")]),t._v(" preg_replace")]),t._v(" "),e("p",[t._v("通过正则表达式替换")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("$str= '1@2#3';\necho preg_replace('/@|#/','-',$str);\n")])])]),e("h3",{attrs:{id:"preg-replace-callback"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#preg-replace-callback","aria-hidden":"true"}},[t._v("#")]),t._v(" preg_replace_callback")]),t._v(" "),e("p",[t._v("使用回调函数进行替换操作")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("$str = '1@2@3';\necho preg_replace_callback('/\\d+/',function ($matches) {\n\treturn $matches[0]+100;\n}, $str);\n")])])])])},[],!1,null,null,null);a.default=_.exports}}]);