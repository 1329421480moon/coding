(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{229:function(t,a,e){t.exports=e.p+"assets/img/1526214082941.ad015b93.png"},230:function(t,a,e){t.exports=e.p+"assets/img/1526214156985.7a278450.png"},231:function(t,a,e){t.exports=e.p+"assets/img/1526219105062.7379665a.png"},232:function(t,a,e){t.exports=e.p+"assets/img/1526276371437.88e7de39.png"},233:function(t,a,e){t.exports=e.p+"assets/img/1526280838031.9af2ade9.png"},234:function(t,a,e){t.exports=e.p+"assets/img/1526281914667.8ec5d311.png"},269:function(t,a,e){"use strict";e.r(a);var s=e(0),i=Object(s.a)({},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"git"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git","aria-hidden":"true"}},[t._v("#")]),t._v(" GIT")]),t._v(" "),s("blockquote",[s("p",[t._v("后盾人 www.houdunren.com  作者："),s("a",{attrs:{href:"http://www.aoxiangjun.com",target:"_blank",rel:"noopener noreferrer"}},[t._v("向军大叔"),s("OutboundLink")],1)])]),t._v(" "),s("h2",{attrs:{id:"安装"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装","aria-hidden":"true"}},[t._v("#")]),t._v(" 安装")]),t._v(" "),s("p",[t._v("自诞生于 2005 年以来，Git 日臻成熟完善，在高度易用的同时，仍然保留着初期设定的目标。它的速度飞快，极其适合管理大项目 。")]),t._v(" "),s("p",[t._v("Git可以在windows、Mac、Linux全平台系统使用。登录  https://git-scm.com/downloads 下载你系统的Git软件并进行安装。")]),t._v(" "),s("blockquote",[s("p",[t._v("windows 用户我更建议安装  git for windows ，下载地址：  https://gitforwindows.org/")]),t._v(" "),s("p",[t._v("包信 Git Base 、Git Gui")])]),t._v(" "),s("p",[t._v("安装后通过以下命令查看，如果显示版本号那就是安装成功了")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("git --version\n")])])]),s("p",[t._v("Gui")]),t._v(" "),s("p",[t._v("Gui指Git的图形界面管理软件，https://git-scm.com/downloads/guis 这个网址列出了多个可供基本上所有平台使用的Gui软件。如果要使用Gui而非命令行操作，我推荐 "),s("code",[t._v("sourcetree")]),t._v(" 这也是我多年使用的软件，功能强大、跨平台、免费。")]),t._v(" "),s("h4",{attrs:{id:"配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置","aria-hidden":"true"}},[t._v("#")]),t._v(" 配置")]),t._v(" "),s("p",[t._v("配置文件为 "),s("code",[t._v("~/.gitconfig")]),t._v(" ，执行任何Git配置命令后文件将自动创建。")]),t._v(" "),s("p",[t._v("第一个要配置的是你个人的用户名称和电子邮件地址。这两条配置很重要，每次 Git 提交时都会引用这两条信息，说明是谁提交了更新，所以会随更新内容一起被永久纳入历史记录：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('git config --global user.email "2300071698@qq.com"\ngit config --global user.name "2300071698@qq.com"\n')])])]),s("h4",{attrs:{id:"常用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常用","aria-hidden":"true"}},[t._v("#")]),t._v(" 常用")]),t._v(" "),s("ol",[s("li",[t._v("初始化新仓库 "),s("code",[t._v("git init")])]),t._v(" "),s("li",[t._v("克隆旧仓库 "),s("code",[t._v("git clone https://github.com/houdunwang/arr.git")])]),t._v(" "),s("li",[t._v("查看状态 "),s("code",[t._v("git status")])]),t._v(" "),s("li",[t._v("提交单个文件 "),s("code",[t._v("git add index.php")])]),t._v(" "),s("li",[t._v("提交所有文件 "),s("code",[t._v("git add -A")])]),t._v(" "),s("li",[t._v("使用通配符提交 "),s("code",[t._v("git add *.js")])]),t._v(" "),s("li",[t._v("提交到仓库中 "),s("code",[t._v("git commit -m '提示信息'")])]),t._v(" "),s("li",[t._v("提交已经跟踪过的文件，不需要执行add "),s("code",[t._v("git commit -a -m '提交信息'")])]),t._v(" "),s("li",[t._v("删除版本库与项目目录中的文件 "),s("code",[t._v("git rm index.php")])]),t._v(" "),s("li",[t._v("只删除版本库中文件但保存项目目录中文件 "),s("code",[t._v("git rm --cached index.php")])]),t._v(" "),s("li",[t._v("修改最后一次提交 "),s("code",[t._v("git commit --amend")])])]),t._v(" "),s("h4",{attrs:{id:"清理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#清理","aria-hidden":"true"}},[t._v("#")]),t._v(" 清理")]),t._v(" "),s("ol",[s("li",[t._v("放弃没有提交的修改 "),s("code",[t._v("git checkout .")])]),t._v(" "),s("li",[t._v("删除没有add 的文件和目录 "),s("code",[t._v("git clean -fd")])]),t._v(" "),s("li",[t._v("显示将要删除的文件或目录 "),s("code",[t._v("git clean -n")])])]),t._v(" "),s("h4",{attrs:{id:"log"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#log","aria-hidden":"true"}},[t._v("#")]),t._v(" Log")]),t._v(" "),s("ol",[s("li",[t._v("查看日志 "),s("code",[t._v("git log")])]),t._v(" "),s("li",[t._v("查看最近2次提交日志并显示文件差异 "),s("code",[t._v("git log -p -2")])]),t._v(" "),s("li",[t._v("显示已修改的文件清单  "),s("code",[t._v("git log --name-only")])]),t._v(" "),s("li",[t._v("显示新增、修改、删除的文件清单  "),s("code",[t._v("git log --name-status")])]),t._v(" "),s("li",[t._v("一行显示并只显示SHA-1的前几个字符 "),s("code",[t._v("git log --oneline")])])]),t._v(" "),s("h4",{attrs:{id:"alias"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#alias","aria-hidden":"true"}},[t._v("#")]),t._v(" Alias")]),t._v(" "),s("p",[t._v("通过创建命令别名可以减少命令输入量。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("git config --global alias.c commit\n")])])]),s("blockquote",[s("p",[t._v("可以在配置文件  ~/.gitconfig 中查看或直接编辑")])]),t._v(" "),s("p",[t._v("下面是一个Git命令Alias配置")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("[alias]\n\ta = add .\n\tc = commit\n\ts = status\n\tl = log\n\tb = branch\n")])])]),s("p",[t._v("现在可以使用 "),s("code",[t._v("git a")]),t._v(" 实现  "),s("code",[t._v("git add .")]),t._v(" 一样的效果了。")]),t._v(" "),s("p",[s("strong",[t._v("系统Alias")])]),t._v(" "),s("p",[t._v("在 "),s("code",[t._v("~/.bash_profile")]),t._v(" 文件中定义")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('alias gs="git status"\nalias gc="git commit -m "\nalias gl="git log --graph --pretty=format:\'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset\' --abbrev-commit  "\nalias gb="git branch"\nalias ga="git add ."\nalias go="git checkout"\n')])])]),s("p",[t._v("命令行直接使用 "),s("code",[t._v("gs")]),t._v(" 即可以实现 "),s("code",[t._v("git status")]),t._v(" 一样的效果了。")]),t._v(" "),s("blockquote",[s("p",[t._v("window 系统需要使用 git for window 中的 "),s("code",[t._v("Git Base")]),t._v(" 软件")])]),t._v(" "),s("h4",{attrs:{id:"gitignore"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#gitignore","aria-hidden":"true"}},[t._v("#")]),t._v(" .gitignore")]),t._v(" "),s("p",[t._v(".gitignore用于定义忽略提交的文件")]),t._v(" "),s("ul",[s("li",[t._v("所有空行或者以注释符号 "),s("code",[t._v("＃")]),t._v(" 开头的行都会被 Git 忽略。")]),t._v(" "),s("li",[t._v("匹配模式最后跟反斜杠（"),s("code",[t._v("/")]),t._v("）说明要忽略的是目录。")]),t._v(" "),s("li",[t._v("可以使用标准的 glob 模式匹配。")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("\n.idea\n/vendor\n.env\n/node_modules\n/public/storage\n*.txt\n")])])]),s("h4",{attrs:{id:"branch"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#branch","aria-hidden":"true"}},[t._v("#")]),t._v(" Branch")]),t._v(" "),s("p",[t._v("分支用于为项目增加新功能或修复Bug时使用。")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("创建分支 "),s("code",[t._v("git branch dev")])])]),t._v(" "),s("li",[s("p",[t._v("查看分支 "),s("code",[t._v("git branch")])])]),t._v(" "),s("li",[s("p",[t._v("切换分支 "),s("code",[t._v("git checkout dev")])])]),t._v(" "),s("li",[s("p",[t._v("创建并切换分支 "),s("code",[t._v("git checkout -b feature/bbs")])])]),t._v(" "),s("li",[s("p",[t._v("合并dev分支到master")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("git checkout master\ngit merge dev\n")])])])]),t._v(" "),s("li",[s("p",[t._v("删除分支 "),s("code",[t._v("git branch -d dev")])])]),t._v(" "),s("li",[s("p",[t._v("删除没有合并的分支"),s("code",[t._v("git branch -D dev")])])]),t._v(" "),s("li",[s("p",[t._v("删除远程分支 "),s("code",[t._v("git push origin :dev")])])]),t._v(" "),s("li",[s("p",[t._v("查看未合并的分支(切换到master) "),s("code",[t._v("git branch --no-merged")])])]),t._v(" "),s("li",[s("p",[t._v("查看已经合并的分支(切换到master) "),s("code",[t._v("git branch --merged")])])])]),t._v(" "),s("h4",{attrs:{id:"冲突"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#冲突","aria-hidden":"true"}},[t._v("#")]),t._v(" 冲突")]),t._v(" "),s("p",[t._v("不同分修改同一个文件或不同开发者修改同一个分支文件都可能造成冲突，造成无法提交代码。")]),t._v(" "),s("ol",[s("li",[t._v("使用编辑器修改冲突的文件")]),t._v(" "),s("li",[t._v("添加暂存 "),s("code",[t._v("git add .")]),t._v("  表示已经解决冲突")]),t._v(" "),s("li",[t._v("git commit 提交完成")])]),t._v(" "),s("h4",{attrs:{id:"储藏（stashing）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#储藏（stashing）","aria-hidden":"true"}},[t._v("#")]),t._v(" 储藏（Stashing）")]),t._v(" "),s("p",[t._v("当你正在进行项目中某一部分的工作，里面的东西处于一个比较杂乱的状态，而你想转到其他分支上进行一些工作。问题是，你不想提交进行了一半的工作，否则以后你无法回到这个工作点。")]),t._v(" "),s("p",[t._v('"暂存" 可以获取你工作目录的中间状态——也就是你修改过的被追踪的文件和暂存的变更——并将它保存到一个未完结变更的堆栈中，随时可以重新应用。')]),t._v(" "),s("ol",[s("li",[t._v("储藏工作 "),s("code",[t._v("git stash")])]),t._v(" "),s("li",[t._v("查看储藏列表 "),s("code",[t._v("git stash list")])]),t._v(" "),s("li",[t._v("应用最近的储藏 "),s("code",[t._v("git stash apply")])]),t._v(" "),s("li",[t._v("应用更早的储藏 "),s("code",[t._v("git stash apply stash@{2}")])]),t._v(" "),s("li",[t._v("删除储藏"),s("code",[t._v("git stash drop stash@{0}")])]),t._v(" "),s("li",[t._v("应用并删除储藏 "),s("code",[t._v("git stash pop")])])]),t._v(" "),s("h4",{attrs:{id:"tag"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tag","aria-hidden":"true"}},[t._v("#")]),t._v(" Tag")]),t._v(" "),s("p",[t._v("Git 也可以对某一时间点上的版本打上标签 ，用于发布软件版本如 v1.0")]),t._v(" "),s("ol",[s("li",[t._v("添加标签 "),s("code",[t._v("git tag v1.0")])]),t._v(" "),s("li",[t._v("列出标签 "),s("code",[t._v("git tag")])]),t._v(" "),s("li",[t._v("推送标签 "),s("code",[t._v("git push --tags")])]),t._v(" "),s("li",[t._v("删除标签 "),s("code",[t._v("git tag -d v1.0.1")])]),t._v(" "),s("li",[t._v("删除远程标签 "),s("code",[t._v("git push origin :v1.0.1")])])]),t._v(" "),s("h4",{attrs:{id:"发布"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#发布","aria-hidden":"true"}},[t._v("#")]),t._v(" 发布")]),t._v(" "),s("p",[t._v("对mster分支代码生成压缩包供使用者下载使用，"),s("code",[t._v("--prefix")]),t._v(" 指定目录名")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("git archive master --prefix='hdcms/' --format=zip > hdcms.zip\n")])])]),s("p",[t._v("#远程仓库")]),t._v(" "),s("p",[t._v("下面是最热的"),s("code",[t._v("Github")]),t._v("进行讲解，使用"),s("code",[t._v("码云、codeing")]),t._v(" 等国内仓库使用方式一致，就不在赘述了。")]),t._v(" "),s("p",[s("strong",[t._v("创建仓库")])]),t._v(" "),s("p",[t._v("为了完成以下示例，你需要在"),s("code",[t._v("GitHub")]),t._v(" 创建好仓库。")]),t._v(" "),s("p",[s("img",{attrs:{src:e(229),alt:"1526214082941"}})]),t._v(" "),s("p",[s("img",{attrs:{src:e(230),alt:"1526214156985"}})]),t._v(" "),s("h4",{attrs:{id:"ssh"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ssh","aria-hidden":"true"}},[t._v("#")]),t._v(" SSH")]),t._v(" "),s("p",[s("strong",[t._v("生成秘钥")])]),t._v(" "),s("p",[t._v("使用ssh连接Github发送指令更加安全可靠，也可以免掉每次输入密码的困扰。")]),t._v(" "),s("p",[t._v("在命令行中输入以下代码（windows用户使用 Git Bash）")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("ssh-keygen -t rsa\n")])])]),s("p",[t._v("一直按回车键直到结束。系统会在"),s("code",[t._v("~/.ssh")]),t._v(" 目录中生成  "),s("code",[t._v("id_rsa")]),t._v("和"),s("code",[t._v("id_rsa.pub")]),t._v("，即密钥"),s("code",[t._v("id_rsa")]),t._v("和公钥"),s("code",[t._v("id_rsa.pub")]),t._v("。")]),t._v(" "),s("p",[s("strong",[t._v("向GitHub添加秘钥")])]),t._v(" "),s("p",[s("img",{attrs:{src:e(231),alt:"1526219105062"}})]),t._v(" "),s("p",[t._v("点击 "),s("code",[t._v("New SSH key")]),t._v(" 按钮，添加上面生成的 "),s("code",[t._v("id_rsa.pub")]),t._v(" 公钥内容。")]),t._v(" "),s("h4",{attrs:{id:"关联远程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#关联远程","aria-hidden":"true"}},[t._v("#")]),t._v(" 关联远程")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("创建本地库并完成初始提交")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('echo "# hd-xj" >> README.md\ngit init\ngit add README.md\ngit commit -m "first commit"\n')])])])]),t._v(" "),s("li",[s("p",[t._v("添加远程仓库")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("git remote add origin git@github.com:houdunwang/hd-xj.git\n")])])])]),t._v(" "),s("li",[s("p",[t._v("查看远程库")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v(" git remote -v\n")])])])]),t._v(" "),s("li",[s("p",[t._v("推送数据到远程仓库")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("git push -u origin master\n")])])])]),t._v(" "),s("li",[s("p",[t._v("删除远程仓库关联")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("git remote rm origin\n")])])])])]),t._v(" "),s("blockquote",[s("p",[t._v("通过 clone 克隆的仓库，本地与远程已经自动关联，上面几步都可以省略。")])]),t._v(" "),s("h4",{attrs:{id:"pull"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#pull","aria-hidden":"true"}},[t._v("#")]),t._v(" pull")]),t._v(" "),s("p",[t._v("拉取远程主机某个分支的更新，再与本地的指定分支合并。")]),t._v(" "),s("ol",[s("li",[t._v("拉取origin主机的ask分支与本地的master分支合并 "),s("code",[t._v("git pull origin ask:ask")])]),t._v(" "),s("li",[t._v("拉取origin主机的ask分支与当前分支合并 "),s("code",[t._v("git pull origin ask")])]),t._v(" "),s("li",[t._v("如果远程分支与当前本地分支同名直接执行 "),s("code",[t._v("git pull")])])]),t._v(" "),s("h4",{attrs:{id:"push"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#push","aria-hidden":"true"}},[t._v("#")]),t._v(" push")]),t._v(" "),s("p",[s("code",[t._v("git push")]),t._v("命令用于将本地分支的更新，推送到远程主机。它的格式与"),s("code",[t._v("git pull")]),t._v("命令相似。")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("将当前分支推送到"),s("code",[t._v("origin")]),t._v("主机的对应分支(如果当前分支只有一个追踪分支 ，可省略主机名)")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("git push origin\n")])])])]),t._v(" "),s("li",[s("p",[t._v("使用"),s("code",[t._v("-u")]),t._v("选项指定一个默认主机 ,这样以后就可以不加任何参数直播使用"),s("code",[t._v("git push")]),t._v("。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("$ git push -u origin master\n")])])])]),t._v(" "),s("li",[s("p",[t._v("删除远程"),s("code",[t._v("ask")]),t._v("分支 "),s("code",[t._v("git push origin --delete ask")])])]),t._v(" "),s("li",[s("p",[t._v("本地ask分支关联远程分支并推送 "),s("code",[t._v("git push --set-upstream origin ask")])])])]),t._v(" "),s("h4",{attrs:{id:"提交多个库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#提交多个库","aria-hidden":"true"}},[t._v("#")]),t._v(" 提交多个库")]),t._v(" "),s("p",[t._v("我可以将代码提交到多个远程版本库中，比如后盾人的 "),s("a",{attrs:{href:"https://gitee.com/houdunren/code",target:"_blank",rel:"noopener noreferrer"}},[t._v("课程代码"),s("OutboundLink")],1),t._v(" 就提交到了Github与Gitee两个库中。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("# 增加一个远程库\ngit remote add github git@github.com:houdunwang/coding.git\n\n# 提交到远程库\ngit push github\n")])])]),s("p",[t._v("也可以创建命令一次提交到两个库(注：参考上面的命令设置章节)")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('alias gp="git push & git push github"\n')])])]),s("h1",{attrs:{id:"自动部署"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#自动部署","aria-hidden":"true"}},[t._v("#")]),t._v(" 自动部署")]),t._v(" "),s("p",[t._v("GitHub设置 "),s("code",[t._v("WebHook")])]),t._v(" "),s("p",[s("img",{attrs:{src:e(232),alt:"1526276371437"}})]),t._v(" "),s("h2",{attrs:{id:"php"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#php","aria-hidden":"true"}},[t._v("#")]),t._v(" PHP")]),t._v(" "),s("p",[t._v("项目中添加处理 webhook 的webhook.php文件内容如下，并提交到版本库。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('<?php\n// GitHub Webhook Secret.\n// GitHub项目 Settings/Webhooks 中的 Secret\n$secret = "houdunren";\n\n// Path to your respostory on your server.\n// e.g. "/var/www/respostory"\n// 项目地址\n$path = "/www/wwwroot/xj.houdunren.com";\n\n// Headers deliveried from GitHub\n$signature = $_SERVER[\'HTTP_X_HUB_SIGNATURE\'];\n\nif ($signature) {\n  $hash = "sha1=".hash_hmac(\'sha1\', file_get_contents("php://input"), $secret);\n  if (strcmp($signature, $hash) == 0) {\n    echo shell_exec("cd {$path} && /usr/bin/git reset --hard origin/master && /usr/bin/git clean -f && /usr/bin/git pull 2>&1");\n    exit();\n  }\n}\n\nhttp_response_code(404);\n?>\n')])])]),s("p",[s("strong",[t._v("创建站点")])]),t._v(" "),s("p",[t._v("下面示例我使用的是 "),s("code",[t._v("宝塔")]),t._v(" 主机面板。 "),s("img",{attrs:{src:e(233),alt:"1526280838031"}})]),t._v(" "),s("p",[t._v("现在服务器上生成了站点目录 "),s("code",[t._v("/www/wwwroot/xj.houdunren.com")]),t._v(" ，因为目录中存在 "),s("code",[t._v(".user.ini")]),t._v(" 文件（定义站点可以访问的目录权限），造成不能 "),s("code",[t._v("clone")]),t._v(" 代码，将目录随意改名。")]),t._v(" "),s("p",[t._v("**开启 "),s("code",[t._v("shell_exec")]),t._v(" **")]),t._v(" "),s("p",[t._v("执行 "),s("code",[t._v("git pull")]),t._v(" 指令需要使用 "),s("code",[t._v("shell_exec")]),t._v(" 函数，删除shell_exec 禁用函数后重启PHP。")]),t._v(" "),s("p",[s("img",{attrs:{src:e(234),alt:"1526281914667"}})]),t._v(" "),s("p",[s("strong",[t._v("clone")])]),t._v(" "),s("p",[t._v("登录服务器并使用 https 协议 clone 项目代码")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("ssh root@xj.houdunren.com -p 22\ngit clone https://github.com/houdunwang/xj.git xj.houdunren.com\n")])])]),s("p",[s("strong",[t._v("修改权限")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("chown -R www .\nchmod -R g+s .\nsudo -u www git pull\n")])])]),s("p",[t._v("现在向GitHub 推送代码后，服务器将自动执行代码拉取，自动部署功能设置完成了。")]),t._v(" "),s("h1",{attrs:{id:"github"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#github","aria-hidden":"true"}},[t._v("#")]),t._v(" GitHub")]),t._v(" "),s("h4",{attrs:{id:"接口"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#接口","aria-hidden":"true"}},[t._v("#")]),t._v(" 接口")]),t._v(" "),s("p",[t._v("接口地址：https://api.github.com/")]),t._v(" "),s("ul",[s("li",[t._v("项目接口列表：https://api.github.com/repos/houdunwang/hdcms-laravel")]),t._v(" "),s("li",[t._v("获取文档内容：https://api.github.com/repos/houdunwang/hdcms-laravel/contents/config")])])])},[],!1,null,null,null);a.default=i.exports}}]);