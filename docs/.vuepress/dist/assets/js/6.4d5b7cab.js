(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{246:function(e,a,t){e.exports=t.p+"assets/img/FA2AB3FA-2B6F-4BC0-881B-03CB09668B37-0343581.a5895b9c.png"},247:function(e,a,t){e.exports=t.p+"assets/img/A7BA857C-974D-4B0D-A4F6-6D77E0F51743-0343658.9bfb06f1.png"},248:function(e,a,t){e.exports=t.p+"assets/img/image-20180727144658866.dd8b960a.png"},255:function(e,a,t){"use strict";t.r(a);var s=t(0),r=Object(s.a)({},function(){var e=this,a=e.$createElement,s=e._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"laravel-教程文档"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#laravel-教程文档","aria-hidden":"true"}},[e._v("#")]),e._v(" LARAVEL 教程文档")]),e._v(" "),s("blockquote",[s("p",[e._v("后盾人 www.houdunren.com  作者："),s("a",{attrs:{href:"http://www.aoxiangjun.com",target:"_blank",rel:"noopener noreferrer"}},[e._v("向军大叔"),s("OutboundLink")],1)])]),e._v(" "),s("h2",{attrs:{id:"介绍"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#介绍","aria-hidden":"true"}},[e._v("#")]),e._v(" 介绍")]),e._v(" "),s("p",[e._v("Laravel是一套简洁、优雅的PHP Web开发框架(PHP Web Framework)。它可以让你从面条一样杂乱的代码中解脱出来；它可以帮你构建一个完美的网络APP，而且每行代码都可以简洁、富于表达力。")]),e._v(" "),s("p",[e._v("Laravel 是 基于 PHP 语言的 Web 开源框架，采用了 MVC 的架构模式，在 2011 年 6 月正式发布了首个版本。\n深度集成 PHP 强大的扩展包（Composer）生态与 PHP 开发者广大的受众群，让 Laravel 在发布之后的短短几年时间得到了极其迅猛的发展。我们通过 Google Trends 提供的趋势图（图 1.1）可以看出，Laravel 框架在过去十年，其增长速度迅猛。")]),e._v(" "),s("p",[s("img",{attrs:{src:t(246),alt:"FA2AB3FA-2B6F-4BC0-881B-03CB09668B37"}})]),e._v(" "),s("p",[s("strong",[e._v("laravel是GitHub上PHP项目排名第一的")])]),e._v(" "),s("p",[s("img",{attrs:{src:t(247),alt:"A7BA857C-974D-4B0D-A4F6-6D77E0F51743"}})]),e._v(" "),s("h2",{attrs:{id:"版本"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#版本","aria-hidden":"true"}},[e._v("#")]),e._v(" 版本")]),e._v(" "),s("h4",{attrs:{id:"lts"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#lts","aria-hidden":"true"}},[e._v("#")]),e._v(" Lts")]),e._v(" "),s("p",[e._v("Long-Term Support,长期技术支持（版本），该版本拥有较长的维护周期，是商业项目优先考虑使用的版本。")]),e._v(" "),s("h4",{attrs:{id:"常规版"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常规版","aria-hidden":"true"}},[e._v("#")]),e._v(" 常规版")]),e._v(" "),s("p",[e._v("提供6个月的bug修复，维护周期短但功能较新，学习为了使用新功能可采用这个版本。")]),e._v(" "),s("h2",{attrs:{id:"全新安装"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#全新安装","aria-hidden":"true"}},[e._v("#")]),e._v(" 全新安装")]),e._v(" "),s("p",[e._v("使用composer安装laravel框架")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("composer create-project --prefer-dist laravel/laravel blog\n")])])]),s("p",[e._v("安装完 Laravel 之后，你必须将 web 服务器更目录指向 "),s("code",[e._v("public")]),e._v(" 目录。该目录下的 "),s("code",[e._v("index.php")]),e._v(" 文件将作为所有进入应用程序的 HTTP 请求的前端控制器。")]),e._v(" "),s("p",[e._v("需要修改 "),s("code",[e._v(".env")]),e._v(" 配置文件中的 "),s("code",[e._v("APP_NAME")]),e._v(" 与 "),s("code",[e._v("APP_URL")])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("APP_NAME=后盾人\nAPP_URL=http://houdunren.com\n")])])]),s("h2",{attrs:{id:"mysql低版本"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mysql低版本","aria-hidden":"true"}},[e._v("#")]),e._v(" Mysql低版本")]),e._v(" "),s("p",[e._v("如果你是在版本低于 5.7.7 的 MySQL release 上创建索引，那就需要你手动配置迁移生成的默认字符串长度。")]),e._v(" "),s("p",[e._v("在 AppServiceProvider.php 文件里的 boot 方法里设置")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("public function boot()\n{\n \t\\Schema::defaultStringLength(191);\n}\n")])])]),s("h2",{attrs:{id:"下载他人项目"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#下载他人项目","aria-hidden":"true"}},[e._v("#")]),e._v(" 下载他人项目")]),e._v(" "),s("p",[e._v("检出别人的项目时，因为.env、verdor、node_moduels文件或目录是不提交到版本库的，造成检出后项目不能正常运行。需要以下几步处理：")]),e._v(" "),s("ol",[s("li",[e._v("composer install")]),e._v(" "),s("li",[e._v("cnpm install")]),e._v(" "),s("li",[e._v("复制 .env.example 文件为 .env文件")]),e._v(" "),s("li",[e._v("执行  "),s("code",[e._v("php artisan key:generate")]),e._v("  生成应用秘钥")]),e._v(" "),s("li",[e._v("修改 .env 配置文件其他数据为你网站数据（比如数据库配置等）")])]),e._v(" "),s("h2",{attrs:{id:"基本使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基本使用","aria-hidden":"true"}},[e._v("#")]),e._v(" 基本使用")]),e._v(" "),s("h4",{attrs:{id:"路由"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#路由","aria-hidden":"true"}},[e._v("#")]),e._v(" 路由")]),e._v(" "),s("p",[e._v("laravel 的路由类型很多，为了对大家不造成学习压力。我们先讲解基础的使用，后面会深入讲到其他路由处理方式。")]),e._v(" "),s("p",[e._v("修改 routes/web.php 路由表文件。")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("Route::get('/home', 'TestController@home');\nRoute::get('/lists', 'TestController@lists');\nRoute::get('/show', 'TestController@show');\n")])])]),s("h4",{attrs:{id:"控制器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#控制器","aria-hidden":"true"}},[e._v("#")]),e._v(" 控制器")]),e._v(" "),s("p",[e._v("创建控制器")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("php artisan make:controller TestController\n")])])]),s("p",[e._v("内容如下：")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("<?php namespace App\\Http\\Controllers;\nuse Illuminate\\Http\\Request;\nclass TestController extends Controller\n{\n\tpublic function home(){\n\t\treturn __METHOD__;\n\t}\n\n\tpublic function lists(){\n\t\treturn __METHOD__;\n\t}\n\n\tpublic function show(){\n\t\treturn __METHOD__;\n\t}\n}\n")])])]),s("p",[e._v("浏览器中访问 "),s("code",[e._v("http://laravel.hd/lists")]),e._v(" 显示内容如下")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("App\\Http\\Controllers\\TestController::lists\n")])])]),s("p",[e._v("以上就是laravel中基本路由与控制器的操作流程。")]),e._v(" "),s("h2",{attrs:{id:"视图"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#视图","aria-hidden":"true"}},[e._v("#")]),e._v(" 视图")]),e._v(" "),s("p",[e._v("视图就是我们显示的页面，视图保存在 "),s("code",[e._v("resources/views")]),e._v(" 文件夹中。")]),e._v(" "),s("h4",{attrs:{id:"继承"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#继承","aria-hidden":"true"}},[e._v("#")]),e._v(" 继承")]),e._v(" "),s("p",[e._v("模板继承是为了共用相同页面数据，减少代码冗余。")]),e._v(" "),s("p",[e._v("下面定义 views/layouts/master.blade.php 文件")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n\t<meta charset=\"UTF-8\">\n\t<title>\n\t\t@yield('title', '后盾人')\n\t</title>\n</head>\n<body>\n\t@yield('content')\n</body>\n</html>\n")])])]),s("p",[e._v("然后在子模板中引入父模板，并使用section替换父模板中yield定义的占位内容。")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("@extends('layouts.master')\n@section('title','后盾人 - 首页')\n@section('content')\n\t<h1>首页1</h1>\n@endsection\n")])])]),s("h4",{attrs:{id:"include"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#include","aria-hidden":"true"}},[e._v("#")]),e._v(" include")]),e._v(" "),s("p",[e._v("include用于加载外部模板")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("@include('user.show')\n")])])]),s("p",[e._v("被引入的视图会继承父视图中的所有数据，同时也可以向引入的视图传递额外的数组数据：")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("@include('view.name', ['some' => 'data'])\n")])])]),s("h4",{attrs:{id:"includeif"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#includeif","aria-hidden":"true"}},[e._v("#")]),e._v(" includeIf")]),e._v(" "),s("p",[e._v("当然，如果尝试使用 "),s("code",[e._v("@include")]),e._v(" 去引入一个不存在的视图，Laravel 会抛出错误。如果想引入一个可能存在或可能不存在的视图，就使用 "),s("code",[e._v("@includeIf")]),e._v(" 指令:")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("@includeIf('view.name', ['some' => 'data'])\n")])])]),s("h4",{attrs:{id:"includewhen"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#includewhen","aria-hidden":"true"}},[e._v("#")]),e._v(" includeWhen")]),e._v(" "),s("p",[e._v("如果要根据给定的布尔条件 "),s("code",[e._v("@include")]),e._v(" 视图，可以使用 "),s("code",[e._v("@includeWhen")]),e._v(" 指令：")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("@includeWhen($boolean, 'view.name', ['some' => 'data'])\n")])])]),s("h4",{attrs:{id:"stack"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#stack","aria-hidden":"true"}},[e._v("#")]),e._v(" stack")]),e._v(" "),s("p",[e._v("Blade 可以被推送到在其他视图或布局中的其他位置渲染的命名堆栈。这在子视图中指定所需的 JavaScript 库时非常有用：")]),e._v(" "),s("p",[e._v("父模板使用")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("<head>\n    \x3c!-- Head Contents --\x3e\n    @stack('scripts')\n</head>\n")])])]),s("p",[e._v("子模板")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("@push('scripts')\n    <script src=\"/example.js\"><\/script>\n@endpush\n")])])]),s("h4",{attrs:{id:"component-slot"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#component-slot","aria-hidden":"true"}},[e._v("#")]),e._v(" component&slot")]),e._v(" "),s("p",[e._v("组件相比 @extends 更灵活些，下面是定义一个 "),s("code",[e._v("modal")]),e._v(" 组件。")]),e._v(" "),s("p",[e._v("组件中的变量可以在调用组件时传参数")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("@component('components.modal',['title'=>'你好','url'=>route('home')])\n")])])]),s("p",[e._v("也可以使用 "),s("code",[e._v("slot")]),e._v(" 标签赋值")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('@slot(\'footer\')\n<button type="button" data-dismiss="modal" class="btn btn-secondary md-close">cancel</button>\n@endslot\n')])])]),s("p",[s("strong",[e._v("示例")])]),e._v(" "),s("p",[e._v("定义一个模态框组件 "),s("code",[e._v("view/components/modal.blade.php")])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('<form action="{{$url}}" method="post" {!!isset($id)?"id=\\"$id\\"":\'\'!!}>\n    @csrf\n    @isset($method) @method($method) @endif\n    <div id="form-bp1" tabindex="-1" role="dialog" class="modal fade colored-header colored-header-primary">\n        <div class="modal-dialog">\n            <div class="modal-content">\n                <div class="modal-header modal-header-colored">\n                    <h3 class="modal-title">\n                        @isset($title) {{$title}} @endisset\n                    </h3>\n                    <button type="button" data-dismiss="modal" aria-hidden="true" class="close md-close"><span class="mdi mdi-close"></span></button>\n                </div>\n                <div class="modal-body">\n                    {{$slot}}\n                </div>\n                <div class="modal-footer">\n                    @isset($footer)\n                        {{$footer}}\n                    @else\n                        <button type="button" data-dismiss="modal" class="btn btn-secondary md-close">关闭</button>\n                        <button type="button" data-dismiss="modal" class="btn btn-primary md-close">保存</button>\n                    @endif\n                </div>\n            </div>\n        </div>\n    </div>\n</form>\n')])])]),s("p",[e._v("模板中调用 "),s("code",[e._v("modal")]),e._v(" 组件")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('@component(\'components.modal\',[\'title\'=>\'你好\',\'url\'=>route(\'home\'),\'method\'=>\'PUT\'])\n<div class="form-group row">\n <label for="inputText3" class="col-12 col-sm-3 col-form-label text-sm-right">\n   Input Text\n </label>\n <div class="col-12 col-sm-12 col-lg-6">\n  <input id="inputText3" type="text" class="form-control form-control-sm">\n </div>\n</div>\n@slot(\'footer\')\n<button type="button" data-dismiss="modal" class="btn btn-secondary md-close">cancel</button>\n<button type="button" data-dismiss="modal" class="btn btn-primary md-close">save</button>\n@endslot\n@endcomponent\n')])])]),s("h3",{attrs:{id:"动态视图目录"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#动态视图目录","aria-hidden":"true"}},[e._v("#")]),e._v(" 动态视图目录")]),e._v(" "),s("p",[e._v("有时我们需要经常改变视图目录")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("$finder = app('view')->getFinder();\n$finder->prependLocation(public_path('templates/'));\n")])])]),s("h2",{attrs:{id:"脚手架"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#脚手架","aria-hidden":"true"}},[e._v("#")]),e._v(" 脚手架")]),e._v(" "),s("p",[e._v("安装cnpm 使用国内镜像，安装速度快。")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("npm install -g cnpm --registry=https://registry.npm.taobao.org\n")])])]),s("p",[e._v("根据packagist.json 安装前端库")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("cnpm install\ncnpm install cross-env\n")])])]),s("p",[e._v("我们需要在 resources/assets 目录下的js 与 css 目录中编写前端文件。")]),e._v(" "),s("p",[s("strong",[e._v("执行编译")])]),e._v(" "),s("p",[e._v("编写好文件事我们需要执行编译操作，生成可供浏览器访问的文件，默认生成在 public/css 与 public/js目录中")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("npm run dev\n")])])]),s("p",[e._v("引入编译好的样式文件")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('<link rel="stylesheet" href="/css/app.css">\n')])])]),s("p",[e._v("文件监听**")]),e._v(" "),s("p",[e._v("每次修改都手动编译效率很低，执行以下命令后Webpack 会在检测到文件更改时自动重新编译资源：")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("npm run watch\n")])])]),s("p",[e._v("在某些环境中，当文件更改时，Webpack 不会更新。如果系统出现这种情况，请考虑使用 "),s("code",[e._v("watch-poll")]),e._v(" 命令：")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("npm run watch-poll\n")])])]),s("p",[s("strong",[e._v("Bootstrap")])]),e._v(" "),s("p",[e._v("在app.scss 文件中定义：")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("@import '~bootstrap/scss/bootstrap'; \n")])])]),s("h2",{attrs:{id:"路由别名"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#路由别名","aria-hidden":"true"}},[e._v("#")]),e._v(" 路由别名")]),e._v(" "),s("p",[e._v("进入路由跳转使用 "),s("code",[e._v("/home")]),e._v(" 等形式可以正常进行，但如果我们有很多页面 使用了这种方式，后期我们将 "),s("code",[e._v("/home")]),e._v(" 更改为了 "),s("code",[e._v("/root")]),e._v("，就要修改多个页面，显然不是很方式 。这时我们可以为路由起别名。")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("Route::get('/home', 'TestController@home')->name('home');\n")])])]),s("p",[e._v("页面中使用调用即可")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('<a class="nav-link" href="{{ route(\'home\') }}">网站首页</a>\n')])])]),s("h2",{attrs:{id:"数据迁移"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据迁移","aria-hidden":"true"}},[e._v("#")]),e._v(" 数据迁移")]),e._v(" "),s("p",[e._v("迁移就像是数据库的版本控制, 允许团队简单轻松的编辑并共享应用的数据库表结构。")]),e._v(" "),s("p",[e._v("迁移文件默认保存在 "),s("code",[e._v("database/migrations")]),e._v(" 文件夹中。")]),e._v(" "),s("blockquote",[s("p",[e._v("课程使用homestead 配置，要保证.env配置正确，并保证主机客户端连接正常")])]),e._v(" "),s("p",[s("strong",[e._v("运行迁移")])]),e._v(" "),s("p",[e._v("使用 Artisan命令 "),s("code",[e._v("migrate")]),e._v(" 方法来运行所有未完成的迁移：")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("php artisan migrate\n")])])]),s("p",[s("strong",[e._v("回滚迁移")])]),e._v(" "),s("p",[e._v("若要回滚最后一次迁移， 可以使用 "),s("code",[e._v("rollback")]),e._v(" 命令。 此命令将回滚最后一次“迁移”的操作，其中可能包含多个迁移文件：")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("php artisan migrate:rollback\n")])])]),s("h4",{attrs:{id:"关联外键约束"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#关联外键约束","aria-hidden":"true"}},[e._v("#")]),e._v(" 关联外键约束")]),e._v(" "),s("p",[e._v("下面是文章表category_id与栏目表的id关联约束设置，当栏目删除时栏目下的所有文章自动删除。")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("$table->unsignedInteger('category_id')->comment('栏目');\n$table->foreign('category_id')->references('id')->on('categories')->onDelete('cascade');\n")])])]),s("h2",{attrs:{id:"模型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#模型","aria-hidden":"true"}},[e._v("#")]),e._v(" 模型")]),e._v(" "),s("p",[e._v("Laravel 的 Eloquent ORM 提供了漂亮、简洁的 ActiveRecord 实现来和数据库交互。每个数据库表都有一个对应的「模型」用来与该表交互。你可以通过模型查询数据表中的数据，并将新记录添加到数据表中。")]),e._v(" "),s("h4",{attrs:{id:"定义模型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#定义模型","aria-hidden":"true"}},[e._v("#")]),e._v(" 定义模型")]),e._v(" "),s("p",[e._v("首先，创建一个 Eloquent 模型，默认生成的模型通常放在 "),s("code",[e._v("app")]),e._v(" 目录中。")]),e._v(" "),s("p",[e._v("创建模型实例的最简单方法是使用 "),s("a",{attrs:{href:"https://laravel-china.org/docs/laravel/5.6/artisan",target:"_blank",rel:"noopener noreferrer"}},[e._v("Artisan 命令"),s("OutboundLink")],1),e._v(" "),s("code",[e._v("make:model")]),e._v("：")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("php artisan make:model Article\n")])])]),s("p",[e._v("如果要在生成模型时生成 "),s("a",{attrs:{href:"https://laravel-china.org/docs/laravel/5.6/migrations",target:"_blank",rel:"noopener noreferrer"}},[e._v("数据库迁移"),s("OutboundLink")],1),e._v(" ，可以使用 "),s("code",[e._v("--migration")]),e._v(" 或 "),s("code",[e._v("-m")]),e._v(" 选项：")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("php artisan make:model Article -m\n")])])]),s("h4",{attrs:{id:"数据表名称"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据表名称","aria-hidden":"true"}},[e._v("#")]),e._v(" 数据表名称")]),e._v(" "),s("p",[e._v("可以通过在模型上定义 "),s("code",[e._v("table")]),e._v(" 属性，来指定自定义数据表。如果不指定时使用模型名加s，如Article 对应表名为articles")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v(" protected $table = 'articles';\n")])])]),s("h4",{attrs:{id:"时间戳"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#时间戳","aria-hidden":"true"}},[e._v("#")]),e._v(" 时间戳")]),e._v(" "),s("p",[e._v("默认情况下，Eloquent 会默认数据表中存在 "),s("code",[e._v("created_at")]),e._v(" 和 "),s("code",[e._v("updated_at")]),e._v(" 这两个字段。如果你不需要这两个字段，则需要在模型内将 "),s("code",[e._v("$timestamps")]),e._v(" 属性设置为 "),s("code",[e._v("false")]),e._v(" ：")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("//该模型是否被自动维护时间戳\npublic $timestamps = false;\n")])])]),s("h4",{attrs:{id:"本地作用域"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#本地作用域","aria-hidden":"true"}},[e._v("#")]),e._v(" 本地作用域")]),e._v(" "),s("p",[e._v("本地作用域能定义通用的约束集合以便在应用中复用。")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("class User extends Model\n{\n    /**\n     * 查询用户活跃类型 1 活跃 2 不活跃\n     *\n     * @return \\Illuminate\\Database\\Eloquent\\Builder\n     */\n    public function scopeActive($query,$type=1)\n    {\n        return $query->where('active', $type);\n    }\n}\n")])])]),s("p",[e._v("使用方法")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("$users = App\\User::active(1)->get();\n")])])]),s("h4",{attrs:{id:"associate"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#associate","aria-hidden":"true"}},[e._v("#")]),e._v(" associate")]),e._v(" "),s("p",[e._v("当更新 "),s("code",[e._v("belongsTo")]),e._v(" 关联时，可以使用 "),s("code",[e._v("associate")]),e._v(" 方法。此方法将会在子模型中设置外键：")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("$account = App\\Account::find(10);\n\n$user->account()->associate($account);\n\n$user->save();\n")])])]),s("h4",{attrs:{id:"软删除"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#软删除","aria-hidden":"true"}},[e._v("#")]),e._v(" 软删除")]),e._v(" "),s("p",[e._v("软件删除不是真正删除数据，只是在表中更改 deleted_at 状态完成，步骤如下：")]),e._v(" "),s("p",[s("strong",[e._v("修改模型")])]),e._v(" "),s("p",[e._v("在模型上使用 "),s("code",[e._v("Illuminate\\Database\\Eloquent\\SoftDeletes")]),e._v(" trait 并把 "),s("code",[e._v("deleted_at")]),e._v(" 字段加入 "),s("code",[e._v("$dates")]),e._v(" 属性：")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("...\nuse Illuminate\\Database\\Eloquent\\SoftDeletes;\n\nclass Video extends Model\n{\n    use SoftDeletes;\n    ...\n}\n")])])]),s("p",[s("strong",[e._v("修改迁移文件")])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("Schema::create('videos', function (Blueprint $table) {\n    $table->softDeletes();\n});\n")])])]),s("p",[e._v("现在，模型调用 "),s("code",[e._v("delete")]),e._v(" 方法，当前日期时间会写入 "),s("code",[e._v("deleted_at")]),e._v(" 字段。同时，查询出来的结果也会自动剔除软删除的模型。")]),e._v(" "),s("p",[s("strong",[e._v("包括软删除的模型")])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v(" App\\Videos::withTrashed()->get();\n")])])]),s("p",[s("code",[e._v("withTrashed")]),e._v(" 方法也可以用在关联查询：")]),e._v(" "),s("p",[s("strong",[e._v("只检索软删除的模型")])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("App\\Videos::onlyTrashed()->get();\n")])])]),s("p",[s("strong",[e._v("恢复软删除模型")])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("App\\Videos::get()->restore();\n")])])]),s("p",[s("strong",[e._v("永久删除")])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("$videos->forceDelete();\n")])])]),s("blockquote",[s("p",[e._v("基本上软删除都可以用在关联操作中")])]),e._v(" "),s("h2",{attrs:{id:"登录历史跳转"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#登录历史跳转","aria-hidden":"true"}},[e._v("#")]),e._v(" 登录历史跳转")]),e._v(" "),s("p",[e._v("使用系统 auth 验证时，会自动 记录当前的url，然后登录成功后使用以下代码就会跳转到来源地址。")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("return redirect()->intended('/');\n")])])]),s("p",[e._v("inteded方法参数默认为 "),s("code",[e._v("/")]),e._v(" ，即没有历史来源时的跳转地址。")]),e._v(" "),s("p",[e._v("如果是自定义的验证，则需要使用以下代码记录来源地址。登录成功后还是使用上面代码跳转就可以了。")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("return redirect()->guest(route('login'))->with('error', '请登录后操作');\n")])])]),s("p",[e._v("guest参数必填即登录地址。")]),e._v(" "),s("p",[e._v("如果想自行定义登录后的回调地址使用下面方法")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("session(['url.intended'=>$request->getRequestUri()]);\n")])])]),s("h2",{attrs:{id:"分页"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分页","aria-hidden":"true"}},[e._v("#")]),e._v(" 分页")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("$users = User::paginate(10);\n")])])]),s("p",[e._v("模板中显示分页列表")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("$users->links();\n")])])]),s("p",[e._v("分页时传递GET参数")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("$users->appends(Request::except('page'))->links()\n")])])]),s("h2",{attrs:{id:"监听sql"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#监听sql","aria-hidden":"true"}},[e._v("#")]),e._v(" 监听SQL")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("DB::enableQueryLog();  \n执行语句  \ndd(DB::getQueryLog());  \n")])])]),s("h2",{attrs:{id:"tinker"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tinker","aria-hidden":"true"}},[e._v("#")]),e._v(" TINKER")]),e._v(" "),s("p",[e._v("使用laravel提供的tinker 可以方便的在命令行进行调试。")]),e._v(" "),s("p",[s("strong",[e._v("进入tinker环境")])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("php artisan tinker\n")])])]),s("p",[s("strong",[e._v("新增用户练习")])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v(">>> use \\App\\User\n>>> $user = new User\n>>> $user->create(['name'=>'houdunren','password'=>bcrypt('admin888'),'email'=>'2300071698@qq.com'])\n")])])]),s("blockquote",[s("p",[e._v("bcrypt 是用来对密码进行加密")])]),e._v(" "),s("p",[s("strong",[e._v("查看用户")])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v(">>> User::first()\n>>> User::all()\n")])])]),s("p",[s("strong",[e._v("修改记录")])]),e._v(" "),s("p",[e._v("下面使用save方法操作")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v(">>> $user = User::first()\n>>> $user->name='后盾人网站'\n>>> $user->save()\n")])])]),s("p",[e._v("下面使用update批量更新")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v(">>> $user = User::first()\n>>> $user->update(['name'=>'后盾人','password'=>bcrypt('admin')])\n")])])]),s("h2",{attrs:{id:"路由参数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#路由参数","aria-hidden":"true"}},[e._v("#")]),e._v(" 路由参数")]),e._v(" "),s("p",[e._v("比如我们定义下面的路由规则，其中 {user} 和 {name} 为路由中的参数变量")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("Route::get('/user/{user}/{name}','UserController@show')->name('user.show');\n\n")])])]),s("p",[e._v("控制器中获取参数方式如下:")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("<?php namespace App\\Http\\Controllers;\nuse Illuminate\\Http\\Request;\nclass UserController extends Controller\n{\n    public function show($user,$name){\n    \tdd($user.'='.$name);\n    }\n}\n\n")])])]),s("h2",{attrs:{id:"隐性路由模型绑定"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#隐性路由模型绑定","aria-hidden":"true"}},[e._v("#")]),e._v(" 隐性路由模型绑定")]),e._v(" "),s("p",[e._v("Laravel 会自动解析定义在路由或控制器行为中与类型提示的变量名匹配的路由段名称的 Eloquent 模型。例如：")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("Route::get('api/users/{user}', function (App\\User $user) {\n    return $user->email;\n});\n\n")])])]),s("p",[e._v("在这个例子中，由于 "),s("code",[e._v("$user")]),e._v(" 变量被类型提示为 Eloquent 模型 "),s("code",[e._v("App\\User")]),e._v("，变量名称又与 URI 中的 "),s("code",[e._v("{user}")]),e._v(" 匹配，因此，Laravel 会自动注入与请求 URI 中传入的 ID 匹配的用户模型实例。如果在数据库中找不到对应的模型实例，将会自动生成 404 异常。")]),e._v(" "),s("h2",{attrs:{id:"资源控制器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#资源控制器","aria-hidden":"true"}},[e._v("#")]),e._v(" 资源控制器")]),e._v(" "),s("p",[e._v("Laravel 遵从 RESTful 架构的设计原则，将数据看做一个资源。Laravel 资源路由将典型的「CRUD」路由分配给具有单行代码的控制器。")]),e._v(" "),s("p",[e._v("使用 Artisan 命令 "),s("code",[e._v("make:controller")]),e._v(" 来快速创建控制器：")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("php artisan make:controller ArticleController --resource\n\n")])])]),s("p",[e._v("接下来，你可以给控制器注册一个资源路由：")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("Route::resource('photos', 'PhotoController');\n\n")])])]),s("p",[s("strong",[e._v("资源控制器方法说明：")])]),e._v(" "),s("table",[s("thead",[s("tr",[s("th",[e._v("动作")]),e._v(" "),s("th",[e._v("URI")]),e._v(" "),s("th",[e._v("行为")]),e._v(" "),s("th",[e._v("路由名称")])])]),e._v(" "),s("tbody",[s("tr",[s("td",[e._v("GET")]),e._v(" "),s("td",[s("code",[e._v("/photos")])]),e._v(" "),s("td",[e._v("index")]),e._v(" "),s("td",[e._v("photos.index")])]),e._v(" "),s("tr",[s("td",[e._v("GET")]),e._v(" "),s("td",[s("code",[e._v("/photos/create")])]),e._v(" "),s("td",[e._v("create")]),e._v(" "),s("td",[e._v("photos.create")])]),e._v(" "),s("tr",[s("td",[e._v("POST")]),e._v(" "),s("td",[s("code",[e._v("/photos")])]),e._v(" "),s("td",[e._v("store")]),e._v(" "),s("td",[e._v("photos.store")])]),e._v(" "),s("tr",[s("td",[e._v("GET")]),e._v(" "),s("td",[s("code",[e._v("/photos/{photo}")])]),e._v(" "),s("td",[e._v("show")]),e._v(" "),s("td",[e._v("photos.show")])]),e._v(" "),s("tr",[s("td",[e._v("GET")]),e._v(" "),s("td",[s("code",[e._v("/photos/{photo}/edit")])]),e._v(" "),s("td",[e._v("edit")]),e._v(" "),s("td",[e._v("photos.edit")])]),e._v(" "),s("tr",[s("td",[e._v("PUT/PATCH")]),e._v(" "),s("td",[s("code",[e._v("/photos/{photo}")])]),e._v(" "),s("td",[e._v("update")]),e._v(" "),s("td",[e._v("photos.update")])]),e._v(" "),s("tr",[s("td",[e._v("DELETE")]),e._v(" "),s("td",[s("code",[e._v("/photos/{photo}")])]),e._v(" "),s("td",[e._v("destroy")]),e._v(" "),s("td",[e._v("photos.destroy")])])])]),e._v(" "),s("blockquote",[s("p",[e._v("可以使用 "),s("code",[e._v("php artisan route:list")]),e._v(" 查看已经定义的路由")])]),e._v(" "),s("h4",{attrs:{id:"指定资源模型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#指定资源模型","aria-hidden":"true"}},[e._v("#")]),e._v(" 指定资源模型")]),e._v(" "),s("p",[e._v("如果你使用了路由模型绑定，并且想在资源控制器的方法中使用类型提示，你可以在生成控制器的时候使用 "),s("code",[e._v("--model")]),e._v(" 选项：")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("php artisan make:controller PhotoController --resource --model=Photo\n\n")])])]),s("h4",{attrs:{id:"伪造表单方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#伪造表单方法","aria-hidden":"true"}},[e._v("#")]),e._v(" 伪造表单方法")]),e._v(" "),s("p",[e._v("因为 HTML 表单不能生成 "),s("code",[e._v("PUT")]),e._v("、 "),s("code",[e._v("PATCH")]),e._v(" 或者 "),s("code",[e._v("DELETE")]),e._v(" 请求，所以你需要添加一个隐藏的 "),s("code",[e._v("_method")]),e._v(" 输入字段来伪造这些 HTTP 动作。辅助函数 "),s("code",[e._v("method_field")]),e._v(" 可以帮你创建这个字段：")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("{{ method_field('PUT') }}\n\n")])])]),s("h2",{attrs:{id:"表单验证"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#表单验证","aria-hidden":"true"}},[e._v("#")]),e._v(" 表单验证")]),e._v(" "),s("p",[e._v("下面是控制器中的 store 方法")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("public function store(Request $request)\n{\n    $this->validate($request, [\n        'title' => 'required|unique:posts|max:255',\n        'body' => 'required',\n    ]);\n\n    // 文章内容是符合规则的，存入数据库\n}\n\n")])])]),s("h4",{attrs:{id:"常用规则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常用规则","aria-hidden":"true"}},[e._v("#")]),e._v(" 常用规则")]),e._v(" "),s("table",[s("thead",[s("tr",[s("th",[e._v("规则")]),e._v(" "),s("th",[e._v("说明说明")]),e._v(" "),s("th",[e._v("示例")])])]),e._v(" "),s("tbody",[s("tr",[s("td",[e._v("confirmed")]),e._v(" "),s("td",[e._v("验证的字段必须和 "),s("code",[e._v("foo_confirmation")]),e._v(" 的字段值一致。例如，如果要验证的字段是 "),s("code",[e._v("password")]),e._v("，输入中必须存在匹配的 "),s("code",[e._v("password_confirmation")]),e._v(" 字段。")]),e._v(" "),s("td")]),e._v(" "),s("tr",[s("td",[e._v("size")]),e._v(" "),s("td",[e._v("验证的字段必须具有与给定值匹配的大小。对于字符串来说，"),s("em",[e._v("value")]),e._v(" 对应于字符数。对于数字来说，"),s("em",[e._v("value")]),e._v(" 对应于给定的整数值。对于数组来说， "),s("em",[e._v("size")]),e._v(" 对应的是数组的 "),s("code",[e._v("count")]),e._v(" 值。对文件来说，"),s("em",[e._v("size")]),e._v(" 对应的是文件大小（单位 kb ）。")]),e._v(" "),s("td")]),e._v(" "),s("tr",[s("td",[e._v("max")]),e._v(" "),s("td",[e._v("验证中的字段必须小于或等于 "),s("em",[e._v("value")]),e._v("。字符串、数字、数组或是文件大小的计算方式都用 "),s("a",{attrs:{href:"https://laravel-china.org/docs/laravel/5.5/validation#rule-size",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("size")]),s("OutboundLink")],1),e._v(" 方法进行评估。")]),e._v(" "),s("td")]),e._v(" "),s("tr",[s("td",[e._v("min")]),e._v(" "),s("td",[e._v("验证中的字段必须具有最小值。字符串、数字、数组或是文件大小的计算方式都用 "),s("a",{attrs:{href:"https://laravel-china.org/docs/laravel/5.5/validation#rule-size",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("size")]),s("OutboundLink")],1),e._v(" 方法进行评估。")]),e._v(" "),s("td")]),e._v(" "),s("tr",[s("td",[e._v("unique")]),e._v(" "),s("td",[e._v("unique:"),s("em",[e._v("table")]),e._v(","),s("em",[e._v("column")]),e._v(","),s("em",[e._v("except")]),e._v(","),s("em",[e._v("idColumn")]),e._v("验证的字段在给定的数据库表中必须是唯一的。如果没有指定 "),s("code",[e._v("column")]),e._v("，将会使用字段本身的名称")]),e._v(" "),s("td",[e._v("'email' => 'unique:users,email_address'")])]),e._v(" "),s("tr",[s("td",[e._v("required")]),e._v(" "),s("td",[e._v("验证的字段必须存在于输入数据中，而不是空。如果满足以下条件之一，则字段被视为「空」：   该值为 "),s("code",[e._v("null")]),e._v(".  该值为空字符串。  该值为空数组或空的 "),s("code",[e._v("可数")]),e._v(" 对象。  该值为没有路径的上传文件。")]),e._v(" "),s("td")]),e._v(" "),s("tr",[s("td",[e._v("email")]),e._v(" "),s("td",[e._v("验证的字段必须符合 e-mail 地址格式。")]),e._v(" "),s("td")]),e._v(" "),s("tr",[s("td",[e._v("sometimes")]),e._v(" "),s("td",[s("strong",[e._v("只有")]),e._v("在该字段存在时， 才对字段执行验证")]),e._v(" "),s("td")]),e._v(" "),s("tr",[s("td",[e._v("nullable")]),e._v(" "),s("td",[e._v("如果你不希望验证程序将 "),s("code",[e._v("null")]),e._v(" 值视为无效的，那就将「可选」的请求字段标记为 "),s("code",[e._v("nullable")]),e._v("，也可以理解为有值时才验证。")]),e._v(" "),s("td")])])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("$request->validate([\n    'title' => 'required|unique:posts|max:255',\n    'body' => 'required',\n    'publish_at' => 'nullable|date',\n]);\n\n")])])]),s("p",[e._v("在这个例子里，我们指定 "),s("code",[e._v("publish_at")]),e._v(" 字段可以为 "),s("code",[e._v("null")]),e._v(" 或者一个有效的日期格式。如果 "),s("code",[e._v("nullable")]),e._v(" 的修饰词没有被添加到规则定义中，验证器会认为 "),s("code",[e._v("null")]),e._v(" 是一个无效的日期格式。")]),e._v(" "),s("blockquote",[s("p",[e._v("更多验证规则使用时请查阅手册 https://laravel.com/docs/5.6/validation")])]),e._v(" "),s("h4",{attrs:{id:"显示验证错误"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#显示验证错误","aria-hidden":"true"}},[e._v("#")]),e._v(" 显示验证错误")]),e._v(" "),s("p",[e._v("如果表单验证失败，laravel会向分配错误信息到 "),s("code",[e._v("$errors")]),e._v(" 中，那么我们就可在模板中使用以下代码展示验证错误。")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('@if (count($errors) > 0)\n    <div class="alert alert-danger">\n        <ul>\n            @foreach ($errors->all() as $error)\n                <li>{{ $error }}</li>\n            @endforeach\n        </ul>\n    </div>\n@endif\n\n')])])]),s("h4",{attrs:{id:"表单验证请求"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#表单验证请求","aria-hidden":"true"}},[e._v("#")]),e._v(" 表单验证请求")]),e._v(" "),s("p",[e._v("面对更复杂的验证情境中，你可以创建一个「表单请求」来处理更为复杂的逻辑。")]),e._v(" "),s("p",[s("strong",[e._v("创建验证请示")])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("php artisan make:request StoreBlogPost\n")])])]),s("p",[e._v("下面是一个示例")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("class UserRequest extends FormRequest\n{\n    public function authorize()\n    {\n        return true;\n    }\n\n    public function rules()\n    {\n        return [\n            'name'  => 'required|between:5,20',\n            'email' => \"required|email|unique:users,email,\".\\Auth::user()->id,\n            'introduce'=>\"required|max:80|min:10\",\n            'avatar'=>'mimes:jpeg,bmp,png|dimensions:min_width=300,min_height=200'\n        ];\n    }\n\n    public function messages()\n    {\n        return [\n            'name.required' => '昵称 不能为空',\n            'name.between'=>'昵称 必须介于 :min 与 :max 之间'\n        ];\n    }\n}\n")])])]),s("h2",{attrs:{id:"表单函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#表单函数","aria-hidden":"true"}},[e._v("#")]),e._v(" 表单函数")]),e._v(" "),s("h4",{attrs:{id:"csrf"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#csrf","aria-hidden":"true"}},[e._v("#")]),e._v(" "),s("strong",[e._v("csrf")])]),e._v(" "),s("p",[e._v("laravel （跨站请求伪造），Laravel 为了安全考虑，会让我们提供一个 token（令牌）来防止我们的应用受到 "),s("a",{attrs:{href:"http://d.laravel-china.org/docs/5.5/routing#csrf-protection",target:"_blank",rel:"noopener noreferrer"}},[e._v("CSRF"),s("OutboundLink")],1),e._v("（跨站请求伪造）的攻击。放置在表单（form）体内。")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("{{csrf_field()}}\n")])])]),s("h4",{attrs:{id:"old"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#old","aria-hidden":"true"}},[e._v("#")]),e._v(" "),s("strong",[e._v("old")])]),e._v(" "),s("p",[s("code",[e._v("old")]),e._v("函数获取一次性存放在session中的值，用在表单的value属性中。这样当我们输出错误回调页面时，原来输入的值还存在。")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('<input type="text" class="form-control" name="name" value={{old(\'name\')}}>\n')])])]),s("h2",{attrs:{id:"表单请求验证"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#表单请求验证","aria-hidden":"true"}},[e._v("#")]),e._v(" 表单请求验证")]),e._v(" "),s("p",[e._v("面对更复杂的验证情境中，你可以创建一个「表单请求」来处理更为复杂的逻辑")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("php artisan make:request StoreBlogRequest\n\n")])])]),s("p",[e._v("新生成的类保存在 "),s("code",[e._v("app/Http/Requests")]),e._v(" 目录下。")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("<?php namespace App\\Http\\Requests;\nuse Illuminate\\Foundation\\Http\\FormRequest;\nclass UserRequest extends FormRequest\n{\n    //权限验证\n    public function authorize()\n    {\n        return true;\n    }\n    //验证规则\n    public function rules()\n    {\n        return [\n            'name'=>'required|max:20',\n            'email'=>'required|email|unique:users|max:255',\n            'password'=>'required|confirmed|min:5',\n        ];\n    }\n    //提示信息\n    public function messages()\n    {\n        return [\n            'name.required' => '名称不能为空',\n            'email.required'  => '邮箱不能为空',\n        ];\n    }\n}\n")])])]),s("p",[e._v("在控制器的方法中依赖注入就可以使用了")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("public function store(UserRequest $request){  \n}\n")])])]),s("h2",{attrs:{id:"重定向"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#重定向","aria-hidden":"true"}},[e._v("#")]),e._v(" 重定向")]),e._v(" "),s("p",[s("code",[e._v("redirect")]),e._v(" 函数返回一个 HTTP 重定向响应，如果调用时没有传入参数则返回 redirector 实例：")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("return redirect('/home');\nreturn redirect()->route('route.name');\n\n")])])]),s("p",[e._v("传递路由参数")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("$user = User::first()\nreturn redirect()->route('user.show',[$user]);\n\n")])])]),s("p",[e._v("假设路由规则为 "),s("code",[e._v("Route::get('user/show/{user}')")]),e._v(" ，上例中的"),s("code",[e._v("[$user]")]),e._v("会自动提出 $user模型对象的主键做为路由参数。")]),e._v(" "),s("h2",{attrs:{id:"闪存数据"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#闪存数据","aria-hidden":"true"}},[e._v("#")]),e._v(" 闪存数据")]),e._v(" "),s("p",[e._v("有时候你仅想在下一个请求之前在 Session 中存入数据，你可以使用 "),s("code",[e._v("flash")]),e._v(" 方法。使用这个方法保存在 Session 中的数据，只会保留到下个 HTTP 请求到来之前，然后就会被删除。闪存数据主要用于短期的状态消息：")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("session()->flash('status', 'Task was successful!');\n")])])]),s("p",[e._v("判断与获取闪存数据")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("@if (session()->has($msg))\n\t{{session()->get($msg)}}\n@endif\n")])])]),s("h4",{attrs:{id:"公共提示消息"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#公共提示消息","aria-hidden":"true"}},[e._v("#")]),e._v(" 公共提示消息")]),e._v(" "),s("p",[e._v("开发中经常用到消息提示，比如登录成功、退出成功等。使用 闪存数据定义一个公共的提示信息组件，就可以解决这个问题。")]),e._v(" "),s("p",[s("strong",[e._v("控制器")])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("public function store(UserRequest $request)\n{\n\tsession()->flash('success','注册成功，欢迎回家');\n\treturn redirect()->route('user.show',[$user]);\n}\n")])])]),s("p",[e._v("公共消息模板  "),s("code",[e._v("resource/view/layouts/_message.blade.php")])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("@foreach (['success','error','danger'] as $msg)\n\t@if (session()->has($msg))\n\t\t<div class=\"alert alert-{{$msg}}\">\n\t\t\t{{session()->get($msg)}}\n\t\t</div>\n\t@endif\n@endforeach\n\n")])])]),s("p",[e._v("需要用到的页面能过 "),s("code",[e._v("@include")]),e._v(" 引入即可")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("@include('layouts._message')\n\n")])])]),s("h2",{attrs:{id:"登录验证"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#登录验证","aria-hidden":"true"}},[e._v("#")]),e._v(" 登录验证")]),e._v(" "),s("p",[e._v("使用 "),s("code",[e._v("Auth::attempt")]),e._v(" 可以进行用户手动登录")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("public function authenticate()\n{\n\tif (Auth::attempt(['email' => $email, 'password' => $password])) {\n\t\t// 认证通过...\n\t\treturn redirect()->intended('dashboard');\n\t}\n}\n\n")])])]),s("p",[e._v("重定向器上的 "),s("code",[e._v("intended")]),e._v(" 方法将重定向到用户尝试访问的 URL。如果该 URL 无效，会给该方法传递回退 URI。")]),e._v(" "),s("p",[e._v("传递历史表单，"),s("code",[e._v("withInput")]),e._v(" 用于把历史表单返回给页面，这样页面中就可以使用 "),s("code",[e._v("old()")]),e._v(" 函数显示历史输入数据了。")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("return redirect()->back()->withInput();\n\n")])])]),s("p",[e._v("完整示例")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("class LoginController extends Controller\n{\n\tpublic function store(Request $request){\n\t\t$user = $this->validate($request,[\n\t\t\t'email'=>'required',\n\t\t\t'password'=>'required',\n\t\t]);\n\n\t\tif(Auth::attempt($user)){\n\t\t\treturn redirect('/');\n\t\t}else{\n\t\t\tsession()->flash('danger','邮箱 或密码错误');\n\t\t\treturn redirect()->back()->withInput();\n\t\t}\n\t}\n}\n\n")])])]),s("p",[e._v("判断用户是否已经登录")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("Auth::check();\n\n")])])]),s("p",[e._v("如果需要将现有用户进行登录，可以使用用户实例调用 "),s("code",[e._v("login")]),e._v(" 方法。可以实现用户注册完就登录。")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("$user = User::first();\nAuth::login($user);\n\n")])])]),s("p",[e._v("用户退出")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("public function logout(){\n\tAuth::logout();\n\tsession()->flash('success','退出成功');\n\treturn redirect()->route('login');\n}\n\n")])])]),s("h4",{attrs:{id:"资源路由传参"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#资源路由传参","aria-hidden":"true"}},[e._v("#")]),e._v(" 资源路由传参")]),e._v(" "),s("p",[e._v("下面是资源路由中生成编辑资源url的方法。")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("{!! route('user.edit',$user->id) !!}\n\n")])])]),s("h4",{attrs:{id:"历史跳转"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#历史跳转","aria-hidden":"true"}},[e._v("#")]),e._v(" 历史跳转")]),e._v(" "),s("p",[s("code",[e._v("intended")]),e._v(" 方法将重定向到用户尝试访问的 URL。如果该 URL 无效，会给该方法传递回退 URI。比如当用户编辑资料时，但用户没有登录，会先跳到用户登录页面。使用intended 方法后登录成功后会回调到，编辑资料页面。如果没有历史，则跳转到 intended指定的参数路由。")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("return redirect()->intended('home');\n\n")])])]),s("h2",{attrs:{id:"模型事件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#模型事件","aria-hidden":"true"}},[e._v("#")]),e._v(" 模型事件")]),e._v(" "),s("p",[e._v("Eloquent 的模型触发了几个事件，可以在模型的生命周期的以下几点进行监控： "),s("code",[e._v("retrieved")]),e._v("、"),s("code",[e._v("creating")]),e._v("、"),s("code",[e._v("created")]),e._v("、"),s("code",[e._v("updating")]),e._v("、"),s("code",[e._v("updated")]),e._v("、"),s("code",[e._v("saving")]),e._v("、"),s("code",[e._v("saved")]),e._v("、"),s("code",[e._v("deleting")]),e._v("、"),s("code",[e._v("deleted")]),e._v("、"),s("code",[e._v("restoring")]),e._v("、"),s("code",[e._v("restored")]),e._v("。事件能在每次在数据库中保存或更新特定模型类时轻松地执行代码。")]),e._v(" "),s("p",[e._v("如果要给某个模型监听很多事件，则可以使用观察器将所有监听器分组到一个类中。观察器类里的方法名应该对应 Eloquent 中你想监听的事件。 每种方法接收 model 作为其唯一的参数。Laravel 没有为观察器设置默认的目录，所以你可以创建任何你喜欢你的目录来存放：")]),e._v(" "),s("h4",{attrs:{id:"定义事件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#定义事件","aria-hidden":"true"}},[e._v("#")]),e._v(" 定义事件")]),e._v(" "),s("p",[e._v("下面是User模型的观察器")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("<?php namespace app\\Observers;\nuse App\\User;\nclass UserObserver{\n\tpublic function creating(User $user){\n\t\t$user->active_token = str_random(20);\n\t}\n\tpublic function saving(User $user){}\n}\n")])])]),s("h4",{attrs:{id:"声明事件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#声明事件","aria-hidden":"true"}},[e._v("#")]),e._v(" 声明事件")]),e._v(" "),s("p",[e._v("在AppServiceProvicer服务提供者的 "),s("code",[e._v("boot")]),e._v(" 方法执行以下代码")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("User::observe(UserObserver::class)\n")])])]),s("p",[e._v("或者在模型中定义")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("namespace App;\n\nuse App\\Observers\\UserServer;\nuse Illuminate\\Notifications\\Notifiable;\nuse Illuminate\\Foundation\\Auth\\User as Authenticatable;\n\nclass User extends Authenticatable\n{\n    ...\n    protected static function boot()\n    {\n        parent::boot();\n        User::observe(UserServer::class);\n    }\n}\n")])])]),s("h2",{attrs:{id:"权限策略"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#权限策略","aria-hidden":"true"}},[e._v("#")]),e._v(" 权限策略")]),e._v(" "),s("p",[e._v("策略是在特定模型或者资源中组织授权逻辑的类。例如，针对用户的更新、修改操作就可以使用策略进行权限控制。")]),e._v(" "),s("h4",{attrs:{id:"创建策略"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建策略","aria-hidden":"true"}},[e._v("#")]),e._v(" 创建策略")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("php artisan make:policy UserPolicy --model=User\n")])])]),s("p",[e._v("下面是一个策略类中的方法，$user为当前登录用户，$model为调用策略时传递的用户模型实例。表示如果当前登录用户与用户实例相同可以更新。")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("public function update(User $user, User $model)\n{\n\treturn $user->id == $model->id;\n}\n")])])]),s("h4",{attrs:{id:"声明策略"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#声明策略","aria-hidden":"true"}},[e._v("#")]),e._v(" 声明策略")]),e._v(" "),s("p",[e._v("在 "),s("code",[e._v("app/Providers/AuthServiceProvider.php")]),e._v(" 类的 "),s("code",[e._v("$policies")]),e._v(" 属性中声明策略")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("protected $policies = [\n\t'App\\Model' => 'App\\Policies\\ModelPolicy',\n\t'App\\User'=>UserPolicy::class\n];\n")])])]),s("h4",{attrs:{id:"控制器中使用策略"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#控制器中使用策略","aria-hidden":"true"}},[e._v("#")]),e._v(" 控制器中使用策略")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("$this->authorize('update', $user);\n#后续业务代码..\n")])])]),s("h4",{attrs:{id:"友好显示"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#友好显示","aria-hidden":"true"}},[e._v("#")]),e._v(" 友好显示")]),e._v(" "),s("p",[e._v("当开启DEBUG时会抛出异常，关注后并定义 "),s("code",[e._v("403.blade.php")]),e._v(" 模板后可以显示友好的提示。")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("errors/403.blade.php\n")])])]),s("h2",{attrs:{id:"邮件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#邮件","aria-hidden":"true"}},[e._v("#")]),e._v(" 邮件")]),e._v(" "),s("h4",{attrs:{id:"配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置","aria-hidden":"true"}},[e._v("#")]),e._v(" 配置")]),e._v(" "),s("p",[e._v("下面是针对 qq邮箱的配置，其他邮箱请自行参考。")]),e._v(" "),s("p",[e._v("登录 "),s("code",[e._v("mail.qq.com")]),e._v(" 你的邮箱。查找 "),s("code",[e._v("设置>帐户>POP3/IMAP/SMTP/Exchange/CardDAV/CalDAV服务")]),e._v(" 开启pop3并获取授权码。")]),e._v(" "),s("p",[e._v("可以在 "),s("code",[e._v("config/mail.php")]),e._v(" 文件或.env开发文件中设置，下面是.env中的配置项")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("MAIL_DRIVER=smtp\nMAIL_HOST=smtp.qq.com\nMAIL_PORT=25\nMAIL_USERNAME=2300071698@qq.com\nMAIL_FROM_ADDRESS=2300071698@qq.com\nMAIL_PASSWORD=a334an2qgnjnoujbeaajj\nMAIL_ENCRYPTION=tls\n\n")])])]),s("blockquote",[s("p",[e._v("MAIL_PASSWORD为 QQ 邮箱提供的摄权码")])]),e._v(" "),s("h4",{attrs:{id:"mailable"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mailable","aria-hidden":"true"}},[e._v("#")]),e._v(" Mailable")]),e._v(" "),s("p",[e._v("在 Laravel 中，每种类型的邮件都代表一个「Mailable」对象。这些对象存储在 "),s("code",[e._v("app/Mail")]),e._v(" 目录中。如果在你的应用中没有看见这个目录，别担心，在首次使用 "),s("code",[e._v("make:mail")]),e._v(" 命令创建 Mailable 类时这个目录会被创建。")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("php artisan make:mail regMail\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("<?php namespace App\\Mail;\nuse Illuminate\\Bus\\Queueable;\nuse Illuminate\\Mail\\Mailable;\nuse Illuminate\\Queue\\SerializesModels;\nuse Illuminate\\Contracts\\Queue\\ShouldQueue;\nclass RegMail extends Mailable\n{\n    use Queueable, SerializesModels;\n\t//公共属性可以模板中直接使用\n    public $user;\n\t//构造函数\n    public function __construct($user)\n    {\n        $this->user = $user;\n    }\n\n    public function build()\n    {\n        return $this->view('mails.reg');\n    }\n}\n\n")])])]),s("h4",{attrs:{id:"发送"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#发送","aria-hidden":"true"}},[e._v("#")]),e._v(" 发送")]),e._v(" "),s("p",[e._v("执行以下代码就可以发送邮件了。")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("\\Mail::to(User::first())->send(new \\App\\Mail\\RegMail(User::find(1)));\n")])])]),s("blockquote",[s("p",[e._v("to：指发送给谁，字段中必须存在 email和name，send: 指使用的邮件处理器")])]),e._v(" "),s("h2",{attrs:{id:"集合"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#集合","aria-hidden":"true"}},[e._v("#")]),e._v(" 集合")]),e._v(" "),s("h4",{attrs:{id:"contains"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#contains","aria-hidden":"true"}},[e._v("#")]),e._v(" contains")]),e._v(" "),s("p",[s("code",[e._v("contains")]),e._v(" 方法判断集合是否包含给定的项目")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("$collection = collect(['name' => 'Desk', 'price' => 100]);\n$collection->contains('Desk');\n// true\n\n$collection->contains('New York');\n// false\n\n")])])]),s("h4",{attrs:{id:"pluck"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#pluck","aria-hidden":"true"}},[e._v("#")]),e._v(" pluck")]),e._v(" "),s("p",[s("code",[e._v("pluck")]),e._v(" 方法可以获取集合中给定键对应的所有值：")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("$collection = collect([\n    ['product_id' => 'prod-100', 'name' => 'Desk'],\n    ['product_id' => 'prod-200', 'name' => 'Chair'],\n]);\n\n$plucked = $collection->pluck('name');\n\n$plucked->all();\n\n// ['Desk', 'Chair']\n\n")])])]),s("h4",{attrs:{id:"slice"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#slice","aria-hidden":"true"}},[e._v("#")]),e._v(" slice")]),e._v(" "),s("p",[s("code",[e._v("slice")]),e._v(" 方法返回集合中给定值后面的部分：")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("$collection = collect([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]);\n\n$slice = $collection->slice(4);\n\n$slice->all();\n\n// [5, 6, 7, 8, 9, 10]\n\n")])])]),s("h4",{attrs:{id:"has"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#has","aria-hidden":"true"}},[e._v("#")]),e._v(" has")]),e._v(" "),s("p",[s("code",[e._v("has")]),e._v(" 方法判断集合中是否存在给定的键：")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("$collection = collect(['account_id' => 1, 'product' => 'Desk']);\n\n$collection->has('product');\n\n// true\n\n")])])]),s("h4",{attrs:{id:"each"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#each","aria-hidden":"true"}},[e._v("#")]),e._v(" each")]),e._v(" "),s("p",[e._v("each` 方法将迭代集合中的内容并将其传递到回调函数中：")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("$collection = $collection->each(function ($item, $key) {\n    //\n});\n\n")])])]),s("h4",{attrs:{id:"count"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#count","aria-hidden":"true"}},[e._v("#")]),e._v(" count")]),e._v(" "),s("p",[s("code",[e._v("count")]),e._v(" 方法返回该集合内的项目总数：")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("$collection = collect([1, 2, 3, 4]);\n\n$collection->count();\n\n")])])]),s("h2",{attrs:{id:"多对多关联"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#多对多关联","aria-hidden":"true"}},[e._v("#")]),e._v(" 多对多关联")]),e._v(" "),s("h4",{attrs:{id:"attach"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#attach","aria-hidden":"true"}},[e._v("#")]),e._v(" attach")]),e._v(" "),s("p",[e._v("我们假设一个用户可以拥有多个角色，并且每个角色都可以被多个用户共享。给某个用户附加一个角色是通过向中间表插入一条记录实现的，可以使用 "),s("code",[e._v("attach")]),e._v(" 方法完成该操作：")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("$user = App\\User::find(1);\n$user->roles()->attach($roleId);\n\n")])])]),s("h4",{attrs:{id:"detach"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#detach","aria-hidden":"true"}},[e._v("#")]),e._v(" detach")]),e._v(" "),s("p",[e._v("有时也需要移除用户的角色。可以使用 "),s("code",[e._v("detach")]),e._v("移除多对多关联记录。"),s("code",[e._v("detach")]),e._v(" 方法将会移除中间表对应的记录；但是这 2 个模型都将会保留在数据库中：")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("// 移除用户的一个角色...\n$user->roles()->detach($roleId);\n\n// 移除用户的所有角色...\n$user->roles()->detach();\n\n")])])]),s("h4",{attrs:{id:"sync"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sync","aria-hidden":"true"}},[e._v("#")]),e._v(" sync")]),e._v(" "),s("p",[s("code",[e._v("sync")]),e._v(" 方法接收一个 ID 数组以替换中间表的记录。中间表记录中，所有未在 ID 数组中的记录都将会被移除。所以该操作结束后，只有给出数组的 ID 会被保留在中间表中：")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("$user->roles()->sync([1, 2, 3]);\n\n")])])]),s("p",[e._v("如果你不想移除现有的 ID，可以使用 "),s("code",[e._v("syncWithoutDetaching")]),e._v(" 方法：")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("$user->roles()->syncWithoutDetaching([1, 2, 3]);\n\n")])])]),s("h4",{attrs:{id:"allrelatedids"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#allrelatedids","aria-hidden":"true"}},[e._v("#")]),e._v(" allRelatedIds")]),e._v(" "),s("p",[s("code",[e._v("allRelatedIds")]),e._v(" 用来获取关联模型的 ID 集合。")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("$user->roles()->allRelatedIds();\n")])])]),s("h4",{attrs:{id:"toggle"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#toggle","aria-hidden":"true"}},[e._v("#")]),e._v(" toggle")]),e._v(" "),s("p",[s("code",[e._v("toggle")]),e._v(" 方法用于「切换」给定 ID 数组的附加状态。 如果给定的 ID 已被附加在中间表中，那么它将会被移除，同样，如果如果给定的 ID 已被移除，它将会被附加：")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("$user->roles()->toggle([1, 2, 3]);\n")])])]),s("h2",{attrs:{id:"消息通知"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#消息通知","aria-hidden":"true"}},[e._v("#")]),e._v(" 消息通知")]),e._v(" "),s("h4",{attrs:{id:"创建通知"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建通知","aria-hidden":"true"}},[e._v("#")]),e._v(" 创建通知")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("php artisan make:notification FindPasswordNotify\n")])])]),s("p",[e._v("这个命令会在 "),s("code",[e._v("app/Notifications")]),e._v(" 目录下生成一个新的通知类。")]),e._v(" "),s("h3",{attrs:{id:"数据库通知"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据库通知","aria-hidden":"true"}},[e._v("#")]),e._v(" 数据库通知")]),e._v(" "),s("p",[s("code",[e._v("database")]),e._v(" 通知渠道在一张数据库表里存储通知信息。该表以自定义的 JSON 格式，存储如通知类型等描述通知的信息。需要先创建一个数据库表来存放这些通知。")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("php artisan notifications:table\n\nphp artisan migrate\n")])])]),s("p",[e._v("修改通知类的 "),s("code",[e._v("via")]),e._v(" 方法为数据库通知")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("public function via($notifiable)\n{\n\treturn ['database'];\n}\n")])])]),s("p",[e._v("然后定义 "),s("code",[e._v("toArray")]),e._v(" 方法返回用于储存到数据表中的通知数据。")]),e._v(" "),s("h4",{attrs:{id:"存取通知"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#存取通知","aria-hidden":"true"}},[e._v("#")]),e._v(" 存取通知")]),e._v(" "),s("p",[e._v("Laravel 的默认模型 "),s("code",[e._v("App\\User")]),e._v(" 已经引入了 Trait "),s("code",[e._v("Illuminate\\Notifications\\Notifiable")]),e._v(" ，它包含了一个 Eloquet 关系 "),s("code",[e._v("notifications")]),e._v(" ，可以为实体返回通知。")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("$user = App\\User::find(1);\n\nforeach ($user->notifications as $notification) {\n    echo $notification->type;\n}\n")])])]),s("p",[e._v("如果你仅仅想检索所有「未读」通知，你需要使用 "),s("code",[e._v("unreadNotifications")]),e._v(" 关系。")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("$user = App\\User::find(1);\n\nforeach ($user->unreadNotifications as $notification) {\n    echo $notification->type;\n}\n")])])]),s("h4",{attrs:{id:"通知标记已读"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#通知标记已读","aria-hidden":"true"}},[e._v("#")]),e._v(" 通知标记已读")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("$user = App\\User::find(1);\n\nforeach ($user->unreadNotifications as $notification) {\n    $notification->markAsRead();\n}\n")])])]),s("p",[e._v("你可以直接使用 "),s("code",[e._v("markAsRead")]),e._v(" 方法操作一个通知集合，而不是遍历处理每个通知：")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("$user->unreadNotifications->markAsRead();\n")])])]),s("h3",{attrs:{id:"邮件通知"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#邮件通知","aria-hidden":"true"}},[e._v("#")]),e._v(" 邮件通知")]),e._v(" "),s("p",[e._v("修改通知类中的 "),s("code",[e._v("toMail")]),e._v(" 与 "),s("code",[e._v("__construct")]),e._v(" 方法")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("public function __construct($token)\n{\n\t$this->token=$token;\n}\npublic function toMail($notifiable)\n{\n\treturn (new MailMessage)\n\t\t->subject('验证邮箱')\n\t\t->greeting(config('app.name'))->line('点击下面的链接重设密码')\n\t\t->action('重置密码',url(route('password.change', $this->token)))\n\t\t->line('感谢使用后盾人');\n}\n")])])]),s("p",[s("strong",[e._v("自定义模板")])]),e._v(" "),s("p",[e._v("你可以通过发布通知包的资源来修改 HTML 模板和纯文本模板。运行这个命令后，邮件通知模板就被放在了 "),s("code",[e._v("resources/views/vendor/notifications")]),e._v(" 文件夹下：")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("php artisan vendor:publish --tag=laravel-notifications\n")])])]),s("h3",{attrs:{id:"发送通知"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#发送通知","aria-hidden":"true"}},[e._v("#")]),e._v(" 发送通知")]),e._v(" "),s("p",[s("strong",[e._v("使用 Notifiable Trait")])]),e._v(" "),s("p",[e._v("通知可以通过两种方法发送： "),s("code",[e._v("Notifiable")]),e._v(" trait 的"),s("code",[e._v("notify")]),e._v(" 方法或 "),s("code",[e._v("Notification")]),e._v(" "),s("a",{attrs:{href:"https://laravel-china.org/docs/laravel/5.6/facades",target:"_blank",rel:"noopener noreferrer"}},[e._v("facade"),s("OutboundLink")],1),e._v("。首先，让我们探索使用 trait ：")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("<?php namespace App;\n\nuse Illuminate\\Notifications\\Notifiable;\nuse Illuminate\\Foundation\\Auth\\User as Authenticatable;\n\nclass User extends Authenticatable\n{\n    use Notifiable;\n}\n")])])]),s("p",[e._v("默认的 "),s("code",[e._v("App\\User")]),e._v(" 模型中使用了这个 trait，它包含着一个可以用来发通知的方法："),s("code",[e._v("notify")]),e._v(" 。 "),s("code",[e._v("notify")]),e._v(" 方法需要一个通知实例做参数：")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("use App\\Notifications\\InvoicePaid;\n\n$user->notify(new InvoicePaid($invoice));\n")])])]),s("p",[s("strong",[e._v("使用 Notification Facade")])]),e._v(" "),s("p",[e._v("另外，你可以通过 "),s("code",[e._v("Notification")]),e._v(" "),s("code",[e._v("facade")]),e._v(" 来发送通知。它主要用在当你给多个可接收通知的实体发送通知的时候，比如给用户集合发通知。要用 facade 发送通知的话，要把可接收通知的实体和通知的实例传递给 "),s("code",[e._v("send")]),e._v(" 方法：")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("Notification::send($users, new InvoicePaid($invoice));\n")])])]),s("h3",{attrs:{id:"队列化通知"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#队列化通知","aria-hidden":"true"}},[e._v("#")]),e._v(" 队列化通知")]),e._v(" "),s("p",[e._v("发送通知可能很耗时，尤其是是当频道需要一个额外的 API 来发送通知。要加速你的应用响应时间，让你的通知继承 "),s("code",[e._v("ShouldQueue")]),e._v(" 接口 并且在你的类中添加 "),s("code",[e._v("Queueable")]),e._v(" trait。这些接口和 trait 已经被使用 "),s("code",[e._v("make:notification")]),e._v(" 生成的所有通知引入了，所以你可以直接将他们添加到你的通知类：")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("<?php\n\nnamespace App\\Notifications;\n\nuse Illuminate\\Bus\\Queueable;\nuse Illuminate\\Notifications\\Notification;\nuse Illuminate\\Contracts\\Queue\\ShouldQueue;\n\nclass InvoicePaid extends Notification implements ShouldQueue\n{\n    use Queueable;\n\n    // ...\n}\n")])])]),s("p",[e._v("做好一上操作并正常配置好队列后，系统将自动使用异步队列发送通知。")]),e._v(" "),s("h2",{attrs:{id:"自定义函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#自定义函数","aria-hidden":"true"}},[e._v("#")]),e._v(" 自定义函数")]),e._v(" "),s("p",[e._v("有时我们需要加载自定义的函数文件，在 "),s("code",[e._v("composer.json")]),e._v(" 文件中定义如下：")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('"autoload": {\n    ...\n    "files": ["bootstrap/helpers.php"]\n}\n')])])]),s("p",[e._v("命令行执行 "),s("code",[e._v("composer dump-autoload")]),e._v(" 重新生成加载配置")]),e._v(" "),s("h2",{attrs:{id:"redis"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#redis","aria-hidden":"true"}},[e._v("#")]),e._v(" Redis")]),e._v(" "),s("p",[e._v("在homestead 中的redis允许的IP为 "),s("code",[e._v("127.0.0.1")]),e._v(" 如果想让windows或mac的GUI工具可访问需要执行以下几步：")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("#修改redis配置文件，将127.0.0.1 改为 0.0.0.0\nsudo vim /etc/redis/redis.conf\n")])])]),s("p",[e._v("重起redis服务")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("sudo service redis restart\n")])])]),s("p",[e._v("Gui 图形管理工具")]),e._v(" "),s("ul",[s("li",[e._v("Mac   http://getmedis.com/")]),e._v(" "),s("li",[e._v("Win\\Mac\\Linux  https://redisdesktop.com/")])]),e._v(" "),s("h2",{attrs:{id:"队列"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#队列","aria-hidden":"true"}},[e._v("#")]),e._v(" 队列")]),e._v(" "),s("p",[e._v("队列用于异步执行消耗时间多的工作，比如发送邮件，商城定单处理等操作，好处是可以快速为客户响应结果，具体处理异步后台操作。")]),e._v(" "),s("p",[e._v("下面的操作使用高效的redis完成处理，所以需要安装相应扩展包")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('composer require "predis/predis:~1.0"\n')])])]),s("h4",{attrs:{id:"配置-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置-2","aria-hidden":"true"}},[e._v("#")]),e._v(" 配置")]),e._v(" "),s("p",[e._v("修改 "),s("code",[e._v("config/queue.php")]),e._v(" 队列配置文件。")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("'default' => env('QUEUE_DRIVER', 'sync'),\n")])])]),s("p",[e._v("sync 为同步可更改为 database 或 redis即为后台异步操作 ，需要先在 "),s("code",[e._v("config/database.php")]),e._v(" 文件中将连接设置好。")]),e._v(" "),s("h4",{attrs:{id:"处理失败任务"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#处理失败任务","aria-hidden":"true"}},[e._v("#")]),e._v(" 处理失败任务")]),e._v(" "),s("p",[e._v("有时你的队列任务会失败。Laravel 包含了一个便捷的方式指定任务会被最大尝试的次数。在一个任务达到了它最大尝试次数后，它会被放入 "),s("code",[e._v("failed_jobs")]),e._v(" 表。要创建 "),s("code",[e._v("failed_jobs")]),e._v(" 表你可以使用 "),s("code",[e._v("queue:failed-table")]),e._v(" 命令：")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("php artisan queue:failed-table\nphp artisan migrate\n")])])]),s("h4",{attrs:{id:"创建任务"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建任务","aria-hidden":"true"}},[e._v("#")]),e._v(" 创建任务")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("php artisan make:job TestJob\n")])])]),s("p",[e._v("在生成的类中的 "),s("code",[e._v("handle")]),e._v(" 方法设置任何具体动作，下面是一个简单的示例。")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("protected $user;\n\npublic function __construct(User $user)\n{\n\t$this->user = $user;\n}\n\npublic function handle()\n{\n\tsleep(6);\n\tfile_put_contents('a.php', var_export($this->user->toArray(),true));\n}\n")])])]),s("h4",{attrs:{id:"分发任务"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分发任务","aria-hidden":"true"}},[e._v("#")]),e._v(" 分发任务")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("TestJob::dispatch(User::find(1));\n")])])]),s("h4",{attrs:{id:"队列处理器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#队列处理器","aria-hidden":"true"}},[e._v("#")]),e._v(" 队列处理器")]),e._v(" "),s("p",[e._v("队列处理器用于执行推送到队列中的任务")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("php artisan queue:work\n")])])]),s("blockquote",[s("p",[e._v("要使 "),s("code",[e._v("queue:work")]),e._v(" 在后台运行需要使用下面讲到的 "),s("code",[e._v("Supervisor")]),e._v(" （生产环境必用）")])]),e._v(" "),s("h4",{attrs:{id:"laravel-队列监控面板"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#laravel-队列监控面板","aria-hidden":"true"}},[e._v("#")]),e._v(" Laravel 队列监控面板")]),e._v(" "),s("p",[e._v("Horizon 提供了一个漂亮的仪表盘，并且可以通过代码配置你的 Laravel Redis 队列，同时能够让你轻松地监控你的队列系统中诸如任务吞吐量，运行时间和失败任务等关键指标。")]),e._v(" "),s("p",[e._v("安装")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('composer require laravel/horizon\nphp artisan vendor:publish --provider="Laravel\\Horizon\\HorizonServiceProvider"\n')])])]),s("p",[e._v("启动执行任务监听")]),e._v(" "),s("p",[e._v("只需一条命令语句即可启动队列执行进程。如果修改了任何代码需要重起 "),s("code",[e._v("horizon")]),e._v(" 监听（需要在homestead系统执行）")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("php artisan horizon\n")])])]),s("p",[e._v("可以通过路由 "),s("code",[e._v("/horizon")]),e._v(" 以图形界面查看任何状态")]),e._v(" "),s("p",[s("img",{attrs:{src:"assets/image-20180620155838912.png",alt:"image-20180620155838912"}})]),e._v(" "),s("h2",{attrs:{id:"supervisor"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#supervisor","aria-hidden":"true"}},[e._v("#")]),e._v(" Supervisor")]),e._v(" "),s("p",[e._v("Supervisor是一个进程控制系统，用于让我们的队列任务在后台运行，并自动维护进行如果挂了就自动重起。")]),e._v(" "),s("h4",{attrs:{id:"修改配置文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#修改配置文件","aria-hidden":"true"}},[e._v("#")]),e._v(" 修改配置文件")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("sudo vi /etc/supervisor/conf.d/laravel-worker.conf\n")])])]),s("p",[e._v("内容如下")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("[program:laravel-worker]\nprocess_name=%(program_name)s_%(process_num)02d\ncommand=php /home/vagrant/code/hdcms-laravel/artisan queue:work --sleep=3 --tries=3\nautostart=true\nautorestart=true\nuser=vagrant\nnumprocs=8\nredirect_stderr=true\nstdout_logfile=/home/vagrant/code/hdcms-laravel/worker.log\n")])])]),s("blockquote",[s("p",[e._v("注意 command 与 stdout_logfile 配置根据环境自行更改")])]),e._v(" "),s("h4",{attrs:{id:"运行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#运行","aria-hidden":"true"}},[e._v("#")]),e._v(" 运行")]),e._v(" "),s("p",[e._v("依次执行下面命令加载配置并运行 "),s("code",[e._v("Supervisor")])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("sudo supervisorctl reread\n\nsudo supervisorctl update\n\nsudo supervisorctl start laravel-worker:*\n")])])]),s("blockquote",[s("p",[e._v("这样我们就不需要执行 "),s("code",[e._v("php artisan queue:work")]),e._v(" 命令了，交给 "),s("code",[e._v("Supervisor")]),e._v(" 自动维护吧")])]),e._v(" "),s("h2",{attrs:{id:"repository"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#repository","aria-hidden":"true"}},[e._v("#")]),e._v(" Repository")]),e._v(" "),s("p",[e._v("组件库Github：https://github.com/houdunwang/repository")]),e._v(" "),s("p",[e._v("Repository 模式主要思想是建立一个数据操作代理层，把controller里的数据操作剥离出来。")]),e._v(" "),s("p",[e._v("Repository 模式是架构模式，在设计架构时，才有参考价值。应用 Repository 模式所带来的好处，远高于实现这个模式所增加的代码。只要项目分层，都应当使用这个模式。")]),e._v(" "),s("p",[e._v("这样做有几个好处：")]),e._v(" "),s("ul",[s("li",[e._v("把数据处理逻辑分离使得代码更容易维护")]),e._v(" "),s("li",[e._v("数据处理逻辑和业务逻辑分离，可以对这两个代码分别进行测试")]),e._v(" "),s("li",[e._v("减少代码重复")]),e._v(" "),s("li",[e._v("降低代码出错的几率")]),e._v(" "),s("li",[e._v("让controller代码的可读性大大提高")])]),e._v(" "),s("h2",{attrs:{id:"service-服务化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#service-服务化","aria-hidden":"true"}},[e._v("#")]),e._v(" Service 服务化")]),e._v(" "),s("p",[e._v("为了体现无尽的复用原则，应该将可用的功能服务器。比如邮箱发送、图片处理、上传功能等。")]),e._v(" "),s("p",[e._v("创建目录 "),s("code",[e._v("app\\Services")])]),e._v(" "),s("h4",{attrs:{id:"上传服务"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#上传服务","aria-hidden":"true"}},[e._v("#")]),e._v(" 上传服务")]),e._v(" "),s("p",[s("strong",[e._v("创建服务类")])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("<?php namespace App\\Services;\nuse Symfony\\Component\\HttpFoundation\\File\\UploadedFile;\nclass UploadService\n{\n    protected $allow_ext = ['jpg', 'jpeg', 'png', 'gif'];\n    public function make(UploadedFile $file)\n    {\n        $ext = strtolower($file->getClientOriginalExtension());\n        if (in_array($ext, $this->allow_ext)) {\n            $dir     = 'uploads/'.date('ymd');\n            $up_file = time().str_random(10).'.'.$ext;\n            $file->move($dir, $up_file);\n\n            return ['path' => config('app.url').'/'.$dir.'/'.$up_file];\n        }\n        return false;\n    }\n}\n")])])]),s("p",[s("strong",[e._v("控制器中使用")])]),e._v(" "),s("p",[e._v("控制器中使用依赖注入服务就可正常使用了。")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("...\npublic function editorImage(Request $request, UploadService $uploadService)\n{\n\t$file = $uploadService->make($request->upload_file);\n\t...\n}\n")])])]),s("h4",{attrs:{id:"图片处理服务"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#图片处理服务","aria-hidden":"true"}},[e._v("#")]),e._v(" 图片处理服务")]),e._v(" "),s("p",[e._v("阅读下面的 "),s("code",[e._v("插件>图片处理")]),e._v(" 文档安装图片处理插件。")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("<?php namespace App\\Services;\nuse Intervention\\Image\\Facades\\Image;\n\nclass ImageService\n{\n\n    protected $img;\n    protected $file;\n    //设置处理文件\n    public function file($file)\n    {\n        $this->file = $file;\n        $this->img  = Image::make($file);\n\n        return $this;\n    }\n    //缩放\n    public function resize($width = null, $height = null)\n    {\n        $this->img->resize(\n            $width,\n            $height,\n            function ($constraint) {\n                //维护比例\n                $constraint->aspectRatio();\n                //防止变大\n                $constraint->upsize();\n            }\n        );\n\n        return $this;\n    }\n    //裁切\n    public function crop($w, $h)\n    {\n        $this->img->crop($w, $h);\n\n        return $this;\n    }\n    //保存\n    public function save($file)\n    {\n        $file = $file ? $file : $this->file;\n\n        return $this->img->save($file);\n    }\n}\n")])])]),s("p",[s("strong",[e._v("控制器中使用")])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("public function show(User $user,ImageService $image,Request $request)\n{\n\t$image->file('uploads/1.jpg')->resize(200)->crop(200,200)->save('uploads/4.jpg');\n\treturn view('user.show',compact('user'));\n}\n")])])]),s("h2",{attrs:{id:"任务调度"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#任务调度","aria-hidden":"true"}},[e._v("#")]),e._v(" 任务调度")]),e._v(" "),s("p",[e._v("在过去，开发者必须在服务器上为每个任务生成单独的 Cron 项目。而令人头疼的是任务调度不受源代码控制，而且必须通过 SSH 连接到服务器上来增加 Cron 项目。")]),e._v(" "),s("p",[e._v("编辑crontab计划任务（artisan设置成你的项目地址）")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("export EDITOR=vi && crontab -e\n* * * * * php /home/vagrant/code/bbs/artisan schedule:run >> /dev/null 2>&1\n")])])]),s("h2",{attrs:{id:"laravel-plugin"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#laravel-plugin","aria-hidden":"true"}},[e._v("#")]),e._v(" Laravel Plugin")]),e._v(" "),s("p",[e._v("在phpstorm中安装 "),s("code",[e._v("laravel plugin")]),e._v(" 插件.")]),e._v(" "),s("p",[s("code",[e._v("Settings > Languages & Frameworks > PHP > Laravel")]),e._v("  点击开启 "),s("code",[e._v("Enable for this project")])]),e._v(" "),s("p",[s("img",{attrs:{src:"assets/1525704374890-1710462.png",alt:"1525704374890"}})]),e._v(" "),s("h2",{attrs:{id:"laravel-ide-helper"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#laravel-ide-helper","aria-hidden":"true"}},[e._v("#")]),e._v(" laravel-ide-helper")]),e._v(" "),s("p",[e._v("laravel-ide-helper 用于实现方便的代码提示功能。")]),e._v(" "),s("p",[e._v("使用composer安装插件")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("composer require barryvdh/laravel-ide-helper\n")])])]),s("p",[e._v("在 "),s("code",[e._v("config\\app.php")]),e._v(" 文件 providers 添加")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("Barryvdh\\LaravelIdeHelper\\IdeHelperServiceProvider::class,\n")])])]),s("p",[e._v("在 "),s("strong",[e._v("app/Providers/AppServiceProvider.php")]),e._v(" 文件中注册")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("public function register()\n{\n    if ($this->app->environment() !== 'production') {\n        $this->app->register(\\Barryvdh\\LaravelIdeHelper\\IdeHelperServiceProvider::class);\n    }\n    // ...\n}\n")])])]),s("p",[e._v("生成代码跟踪支持")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("php artisan ide-helper:generate\n")])])]),s("h4",{attrs:{id:"laravel-artisan-命令提示"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#laravel-artisan-命令提示","aria-hidden":"true"}},[e._v("#")]),e._v(" laravel artisan 命令提示")]),e._v(" "),s("p",[s("code",[e._v("settings>Tools>Command Line Tool Support")])]),e._v(" "),s("p",[s("img",{attrs:{src:t(69),alt:"1525702644734"}})]),e._v(" "),s("p",[s("img",{attrs:{src:t(70),alt:"1525702747114"}})]),e._v(" "),s("h2",{attrs:{id:"多语言"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#多语言","aria-hidden":"true"}},[e._v("#")]),e._v(" 多语言")]),e._v(" "),s("h4",{attrs:{id:"语言包"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#语言包","aria-hidden":"true"}},[e._v("#")]),e._v(" 语言包")]),e._v(" "),s("p",[e._v("默认表单提示是英文的，我们可以安装中文语言包进行汉化。")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("composer require caouecs/laravel-lang:~3.0\n")])])]),s("p",[e._v("包含大多数语言，语言包位于"),s("code",[e._v("vendor/caouecs/larvel-lang/src")]),e._v(" 目录中。")]),e._v(" "),s("p",[s("strong",[e._v("使用")])]),e._v(" "),s("ol",[s("li",[s("p",[e._v("根据需要复制语言包到 "),s("code",[e._v("resources/lang")]),e._v(" 目录中。")])]),e._v(" "),s("li",[s("p",[e._v("修改 "),s("code",[e._v("config/app.php")]),e._v(" 配置文件")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("'locale' => 'zh-CN',\n")])])])])]),e._v(" "),s("h4",{attrs:{id:"json语言包"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#json语言包","aria-hidden":"true"}},[e._v("#")]),e._v(" JSON语言包")]),e._v(" "),s("p",[e._v("在 "),s("code",[e._v("resources/lang")]),e._v(" 目录下定义 "),s("code",[e._v("zh-CN.json")]),e._v(" 文件")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('{\n  "Login": "登录",\n  "Logout":"退出",\n  "E-Mail Address": "邮箱",\n  "Register":"注册",\n  "Password":"密码",\n  "Confirm Password":"确认密码",\n  "Name":"帐号",\n  "Remember Me":"记住我",\n  "Forgot Your Password?":"找回密码",\n  "Reset Password":"重置密码",\n  "Send Password Reset Link":"发送重置邮件",\n  "Reset Password Notification":"重置密码通知",\n  "You are receiving this email because we received a password reset request for your account.":"您收到这封邮件是因为我们收到您的帐户密码重置请求。",\n  "If you did not request a password reset, no further action is required.":"如果没有要求重新设置密码，则不需要进一步的操作。"\n}\n')])])]),s("p",[e._v("在模板中就可以使用 "),s("code",[e._v("__('Login')")]),e._v("  调用了，Laravel 默认的登录模板大量使用了 JSON 语言包")]),e._v(" "),s("h2",{attrs:{id:"session"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#session","aria-hidden":"true"}},[e._v("#")]),e._v(" SESSION")]),e._v(" "),s("p",[e._v("默认Laravel使用文件管理会话，下面是我们改为更高效的数据库管理。")]),e._v(" "),s("p",[e._v("创建数据表")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("php artisan session:table\ncomposer dump-autoload\nphp artisan migrate\n")])])]),s("p",[e._v("修改.env 中的驱动")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("...\nSESSION_DRIVER=database\n...\n")])])]),s("h2",{attrs:{id:"验证码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#验证码","aria-hidden":"true"}},[e._v("#")]),e._v(" 验证码")]),e._v(" "),s("p",[e._v("https://github.com/mewebstudio/captcha")]),e._v(" "),s("p",[e._v("安装")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("composer require mews/captcha\nphp artisan vendor:publish --provider='Mews\\Captcha\\CaptchaServiceProvider' \n")])])]),s("p",[e._v("配置文件 "),s("code",[e._v("config/captcha.php")])]),e._v(" "),s("p",[e._v("使用")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("#前台\n<img src=\"{{ captcha_src('default') }}\" onclick=\"this.src='/captcha/default?_'+Math.random()\">\n\n#后台验证\n$rules = ['captcha' => 'required|captcha'];\n$validator = Validator::make(Input::all(), $rules);\n")])])]),s("h2",{attrs:{id:"用户认证"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#用户认证","aria-hidden":"true"}},[e._v("#")]),e._v(" 用户认证")]),e._v(" "),s("h3",{attrs:{id:"重定向未认证用户"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#重定向未认证用户","aria-hidden":"true"}},[e._v("#")]),e._v(" 重定向未认证用户")]),e._v(" "),s("p",[e._v("当 "),s("code",[e._v("auth")]),e._v(" 中间件判定某个用户未认证，会返回一个 JSON "),s("code",[e._v("401")]),e._v(" 响应，或者，如果不是 Ajax 请求的话，将用户重定向到 "),s("code",[e._v("login")]),e._v(" 命名路由。")]),e._v(" "),s("p",[e._v("你可以通过在 "),s("code",[e._v("app/Exceptions/Handler.php")]),e._v(" 文件中定义一个 "),s("code",[e._v("unauthenticated")]),e._v(" 方法来改变这一行为：")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("use IlluminateAuthAuthenticationException;\n\nprotected function unauthenticated($request, AuthenticationException $exception)\n{\n    return $request->expectsJson()\n                ? response()->json(['message' => $exception->getMessage()], 401)\n                : redirect()->guest(route('login'));\n}\n")])])]),s("h3",{attrs:{id:"事件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#事件","aria-hidden":"true"}},[e._v("#")]),e._v(" 事件")]),e._v(" "),s("p",[e._v("Laravel 在认证过程中引发了各种各样的事件。你可以在 "),s("code",[e._v("EventServiceProvider")]),e._v(" 中对这些事件做监听：")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("/**\n * 应用程序的事件监听器映射。\n *\n * @var array\n */\nprotected $listen = [\n    'Illuminate\\Auth\\Events\\Registered' => [\n        'App\\Listeners\\LogRegisteredUser',\n    ],\n\n    'Illuminate\\Auth\\Events\\Attempting' => [\n        'App\\Listeners\\LogAuthenticationAttempt',\n    ],\n\n    'Illuminate\\Auth\\Events\\Authenticated' => [\n        'App\\Listeners\\LogAuthenticated',\n    ],\n\n    'Illuminate\\Auth\\Events\\Login' => [\n        'App\\Listeners\\LogSuccessfulLogin',\n    ],\n\n    'Illuminate\\Auth\\Events\\Failed' => [\n        'App\\Listeners\\LogFailedLogin',\n    ],\n\n    'Illuminate\\Auth\\Events\\Logout' => [\n        'App\\Listeners\\LogSuccessfulLogout',\n    ],\n\n    'Illuminate\\Auth\\Events\\Lockout' => [\n        'App\\Listeners\\LogLockout',\n    ],\n\n    'Illuminate\\Auth\\Events\\PasswordReset' => [\n        'App\\Listeners\\LogPasswordReset',\n    ],\n];\n")])])]),s("h2",{attrs:{id:"异常处理excepton"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#异常处理excepton","aria-hidden":"true"}},[e._v("#")]),e._v(" 异常处理Excepton")]),e._v(" "),s("p",[e._v("异常处理通常是防止未知错误产生所采取的处理措施。异常处理的好处是你不用再绞尽脑汁去考虑各种错误，这为处理某一类错误提供了一个很有效的方法，使编程效率大大提高。")]),e._v(" "),s("h3",{attrs:{id:"创建异常类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建异常类","aria-hidden":"true"}},[e._v("#")]),e._v(" 创建异常类")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("php artisan artisan make:exception UploadException\n")])])]),s("p",[e._v("定义类内容如下")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("<?php\n\nnamespace App\\Exceptions;\n\nuse Exception;\nuse Throwable;\n\nclass UploadException extends Exception\n{\n    public function __construct(string $message = \"\", int $code = 403, Throwable $previous = null)\n    {\n        parent::__construct($message, $code, $previous);\n    }\n\t\n\t//报告或者通过日志记录一个异常\n    public function report(Exception $exception)\n    {\n        parent::report($exception);\n    }\n    \n\t//将异常通过 Http 返回\n    public function render()\n    {\n        return response()->json(['message' => $this->getMessage(), 'code' => 403], $this->code);\n    }\n}\n\n")])])]),s("h3",{attrs:{id:"异常日志"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#异常日志","aria-hidden":"true"}},[e._v("#")]),e._v(" 异常日志")]),e._v(" "),s("p",[e._v("当发生异常时会在 "),s("code",[e._v("storage/logs/laravel.log")]),e._v(" 文件中记录异常。")]),e._v(" "),s("p",[e._v("如果不想执行异常记录需要在 "),s("code",[e._v("app/Exceptions/Handler.php")]),e._v(" 异常处理器文件的 "),s("code",[e._v("$dontReport")]),e._v(" 属性声明。")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("class Handler extends ExceptionHandler\n{\n   ...\n   protected $dontReport = [\n   \tUploadException::class,\n   ];\n   ...\n}\n")])])]),s("h2",{attrs:{id:"全站动态"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#全站动态","aria-hidden":"true"}},[e._v("#")]),e._v(" 全站动态")]),e._v(" "),s("p",[e._v("使用 https://github.com/spatie/laravel-activitylog 组件构成，可查看 https://docs.spatie.be/laravel-activitylog/v3/introduction 文档学习使用该组件。")]),e._v(" "),s("p",[e._v("安装组件")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("composer require spatie/laravel-activitylog\n")])])]),s("p",[e._v("创建数据迁移文件并执行")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('php artisan vendor:publish --provider="Spatie\\Activitylog\\ActivitylogServiceProvider" --tag="migrations"\n\nphp artisan migrate\n')])])]),s("h3",{attrs:{id:"记录动态"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#记录动态","aria-hidden":"true"}},[e._v("#")]),e._v(" 记录动态")]),e._v(" "),s("p",[s("strong",[e._v("基本使用")])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("activity()\n   ->performedOn($someContentModel)//主题比如评论模型\n   ->causedBy($userModel)//用户模型，不设置时为当前登录用户\n   ->log('edited');\n")])])]),s("p",[s("strong",[e._v("设置自定义属性")])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("activity()\n   ->performedOn($someContentModel)\n   ->withProperties(['key' => 'value'])//设置自定义属性\n   ->log('edited');\n   \n//返回最后动态\n$activity = Activity::all()->last();\n\n//获取用户模型\n$activity->causer\n\n//获取日志名\n$activity->log_name\n\n//获取属性\n$activity->getExtraProperty('key');  \n\n//获取自定属性 'key' 为 'value' 的所有动态\n$activity->where('properties->key', 'value')->get();\n\n//返回模型实例\n$activity->subject;\n")])])]),s("h3",{attrs:{id:"记录模型事件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#记录模型事件","aria-hidden":"true"}},[e._v("#")]),e._v(" 记录模型事件")]),e._v(" "),s("p",[e._v("程序包可以自动记录事件，例如创建，更新和删除模型时。")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("use Illuminate\\Database\\Eloquent\\Model;\nuse Spatie\\Activitylog\\Traits\\LogsActivity;\n\nclass NewsItem extends Model\n{\n    use LogsActivity;\n\n    protected $fillable = ['name', 'text'];\n\n\t//设置动态记录的属性\n    protected static $logAttributes = ['name', 'text'];\n}\n")])])]),s("p",[e._v("如果要记录"),s("code",[e._v("$fillable")]),e._v("对模型的所有属性的更改，可以"),s("code",[e._v("protected static $logFillable = true;")])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("$newsItem = NewsItem::create([\n   'name' => 'original name',\n   'text' => 'Lorum'\n]);\n\n$activity = Activity::all()->last();\n\n//返回 'created'\n$activity->description;\n\n//返回创建的NewsItem实例\n$activity->subject;\n\n//返回模型NewsItem属性 ['attributes' => ['name' => 'original name', 'text' => 'Lorum']];\n$activity->changes();\n")])])]),s("h3",{attrs:{id:"自定义要记录的事件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#自定义要记录的事件","aria-hidden":"true"}},[e._v("#")]),e._v(" 自定义要记录的事件")]),e._v(" "),s("p",[e._v("默认情况下，包将记录"),s("code",[e._v("created")]),e._v("，"),s("code",[e._v("updated")]),e._v("，"),s("code",[e._v("deleted")]),e._v("的事件。您可以通过"),s("code",[e._v("$recordEvents")]),e._v("在模型上设置属性来修改此行为。")]),e._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("use")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token package"}},[e._v("Illuminate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("Database"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("Eloquent"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("Model")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("use")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token package"}},[e._v("Spatie"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("Activitylog"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("Traits"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("LogsActivity")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("class")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("NewsItem")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("extends")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("Model")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("use")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token package"}},[e._v("LogsActivity")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("//only the `deleted` event will get logged automatically")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("protected")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("static")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$recordEvents")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),s("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[e._v("'created'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),s("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[e._v("'updated'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])]),s("h3",{attrs:{id:"自定义日志名称"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#自定义日志名称","aria-hidden":"true"}},[e._v("#")]),e._v(" 自定义日志名称")]),e._v(" "),s("p",[e._v("指定"),s("code",[e._v("$logName")]),e._v("使模型使用除默认名称之外的其他名称。")]),e._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("use")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token package"}},[e._v("Illuminate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("Database"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("Eloquent"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("Model")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("use")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token package"}},[e._v("Spatie"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("Activitylog"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("Traits"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("LogsActivity")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("class")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("NewsItem")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("extends")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("Model")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("use")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token package"}},[e._v("LogsActivity")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("protected")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("static")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$logName")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[e._v("'system'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])]),s("h2",{attrs:{id:"markdown转html"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#markdown转html","aria-hidden":"true"}},[e._v("#")]),e._v(" Markdown转HTML")]),e._v(" "),s("p",[e._v("Parsedown 组件用于将 "),s("code",[e._v("markdown")]),e._v(" 内容转为 "),s("code",[e._v("html")])]),e._v(" "),s("p",[s("strong",[e._v("安装组件")])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("composer require erusev/parsedown\n")])])]),s("p",[s("strong",[e._v("模型中使用")])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("class Article extends Model\n{\n   ...\n\tpublic function getMarkdownAttribute()\n    {\n        $Parsedown = new \\Parsedown();\n        return $Parsedown->text($this['content']);\n    }\n    ..\n}\n")])])]),s("h2",{attrs:{id:"角色权限"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#角色权限","aria-hidden":"true"}},[e._v("#")]),e._v(" 角色权限")]),e._v(" "),s("p",[e._v("https://github.com/spatie/laravel-permission#installation")]),e._v(" "),s("h4",{attrs:{id:"安装"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装","aria-hidden":"true"}},[e._v("#")]),e._v(" 安装")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('composer require spatie/laravel-permission\n\n#生成迁移文件，根据业务需要可以随意添加表字段\nphp artisan vendor:publish --provider="Spatie\\Permission\\PermissionServiceProvider" --tag="migrations"\n\nphp artisan vendor:publish --provider="Spatie\\Permission\\PermissionServiceProvider" --tag="config"\n\nphp artisan migrate\n')])])]),s("h4",{attrs:{id:"基本使用-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基本使用-2","aria-hidden":"true"}},[e._v("#")]),e._v(" 基本使用")]),e._v(" "),s("p",[e._v("缓存角色和权限数据以加速性能。当你使用提供的方法来操作角色和权限时，缓存会自动为您重置：")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("$user->assignRole('writer');\n$user->removeRole('writer');\n$user->syncRoles(params);\n$role->givePermissionTo('edit articles');\n$role->revokePermissionTo('edit articles');\n$role->syncPermissions(params);\n$permission->assignRole('writer');\n$permission->removeRole('writer');\n$permission->syncRoles(params);\n")])])]),s("p",[e._v("但是，如果直接在数据库中操作“权限/角色”数据而不是调用提供的方法，则除非手动重置缓存，否则不会在应用程序中看到反映的更改。")]),e._v(" "),s("h4",{attrs:{id:"手动缓存重置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#手动缓存重置","aria-hidden":"true"}},[e._v("#")]),e._v(" 手动缓存重置")]),e._v(" "),s("p",[e._v("缓存角色和权限数据以加速性能。当你使用提供的方法来操作角色和权限时，缓存会自动为您重置。")]),e._v(" "),s("p",[e._v("要手动重置此软件包的缓存，请运行：")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("php artisan cache:forget spatie.permission.cache\n")])])]),s("p",[e._v("代码删除缓存")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("app()['cache']->forget('spatie.permission.cache');\n")])])]),s("h4",{attrs:{id:"模型动作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#模型动作","aria-hidden":"true"}},[e._v("#")]),e._v(" 模型动作")]),e._v(" "),s("p",[e._v("在 "),s("code",[e._v("User")]),e._v(" 等模型中引入 "),s("code",[e._v("use Spatie\\Permission\\Traits\\HasRoles")]),e._v(" 可以拥有所有权限操作方法")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("use Spatie\\Permission\\Traits\\HasRoles;\n\nclass User extends Authenticatable\n{\n    use HasRoles;\n    ...\n}\n")])])]),s("h4",{attrs:{id:"新建角色"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#新建角色","aria-hidden":"true"}},[e._v("#")]),e._v(" 新建角色")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("use Spatie\\Permission\\Models\\Role;\n$role = Role::create(['name' => 'admin']);\n")])])]),s("h4",{attrs:{id:"删除角色"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#删除角色","aria-hidden":"true"}},[e._v("#")]),e._v(" 删除角色")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("$user->removeRole('writer');\n")])])]),s("p",[e._v("角色也可以同步：")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("//所有当前角色将从用户中删除，并替换为给定的数组中的角色\n$user->syncRoles(['writer', 'admin']); \n")])])]),s("h4",{attrs:{id:"添加权限"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#添加权限","aria-hidden":"true"}},[e._v("#")]),e._v(" 添加权限")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("use Spatie\\Permission\\Models\\Permission;\n\nPermission::create(['name' => 'edit_articles']);\n$role->givePermissionTo('edit_articles');\n\n#或者使用下面分配权限\n$permission->assignRole($role);\n")])])]),s("p",[e._v("可以使用以下方法之一将多个权限同步到一个角色：")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("$role->syncPermissions($permissions);\n$permission->syncRoles($roles);\n")])])]),s("h4",{attrs:{id:"删除权限"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#删除权限","aria-hidden":"true"}},[e._v("#")]),e._v(" 删除权限")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("$role->revokePermissionTo($permission);\n$permission->removeRole($role); \n")])])]),s("p",[e._v("一次性撤消并添加新的权限：")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("$user->syncPermissions(['edit articles', 'delete articles']);\n")])])]),s("h4",{attrs:{id:"添加用户角色"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#添加用户角色","aria-hidden":"true"}},[e._v("#")]),e._v(" 添加用户角色")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("// 单个角色\n$user->assignRole('admin');\n\n// 数组形式的多个角色\n$user->assignRole(['super_user', 'admin']);\n\n// 同步角色(不存在添加，存在忽略)\nauth()->user()->syncRoles(['admin']);\n")])])]),s("h4",{attrs:{id:"添加用户权限"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#添加用户权限","aria-hidden":"true"}},[e._v("#")]),e._v(" 添加用户权限")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("// 为用户添加『直接权限』\n$user->givePermissionTo('manage_contents');\n\n// 获取所有直接权限\n$user->getDirectPermissions() \n")])])]),s("h4",{attrs:{id:"检查用户角色"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#检查用户角色","aria-hidden":"true"}},[e._v("#")]),e._v(" 检查用户角色")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("// 是否是超级管理员\n$user->hasRole('super_user');\n\n// 拥有多个角色中的一个角色\n$user->hasAnyRole(Role::all());  \n\n// 包含所有角色\n$user->hasAllRoles(Role::all()); \n")])])]),s("h4",{attrs:{id:"检查权限"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#检查权限","aria-hidden":"true"}},[e._v("#")]),e._v(" 检查权限")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("//用户是否拥有权限\n$user->can('edit_articles'); \n\n//角色是否拥有权限\n$role->hasPermissionTo('edit_articles');  \n")])])]),s("p",[e._v("或者你可以传递一个代表权限 ID 的整数")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("$user->hasPermissionTo('1');\n$user->hasPermissionTo(Permission::find(1)->id);\n$user->hasPermissionTo($somePermission->id); \n")])])]),s("p",[e._v("如果用户有任何一个权限即通过：")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("$user->hasAnyPermission(['edit articles', 'publish articles', 'unpublish articles']);\n")])])]),s("p",[e._v("用户必须拥有所有权限时通过：")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("$user->hasAllPermissions(['edit articles', 'publish articles', 'unpublish articles']);\n")])])]),s("p",[e._v("你也可以传递整数以通过权限 ID 进行查找")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("$user->hasAnyPermission(['edit articles', 1, 5]);\n")])])]),s("p",[e._v("使用 Laravel 默认的 "),s("code",[e._v("can")]),e._v(" 功能测试用户是否拥有权限：")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("$user->can('edit articles');\n")])])]),s("h4",{attrs:{id:"获取用户权限"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#获取用户权限","aria-hidden":"true"}},[e._v("#")]),e._v(" 获取用户权限")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("//获取直接分配给用户的所有权限的列表\n$permissions = $user->getDirectPermissions();\n\n//从用户角色继承的权限\n$user->getPermissionsViaRoles();\n\n//适用于用户的所有权限（继承和直接）\n$permissions = $user->getAllPermissions();\n")])])]),s("h4",{attrs:{id:"获取用户角色"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#获取用户角色","aria-hidden":"true"}},[e._v("#")]),e._v(" 获取用户角色")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("$roles = $user->getRoleNames(); // 返回一个集合\n")])])]),s("h4",{attrs:{id:"根据权限或角色获取用户"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#根据权限或角色获取用户","aria-hidden":"true"}},[e._v("#")]),e._v(" 根据权限或角色获取用户")]),e._v(" "),s("p",[s("code",[e._v("HasRoles")]),e._v(" 特征(trait)还为您的模型添加了一个“角色”范围，以便将查询范围限定为某些角色或权限：")]),e._v(" "),s("p",[e._v("仅返回具有角色 'writer' 的用户")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("$users = User::role('writer')->get(); \n")])])]),s("p",[e._v("仅返回具有  'edit articles' （继承或直接）权限的用户")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("$users = User::permission('edit articles')->get();\n")])])]),s("h4",{attrs:{id:"blade-和角色"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#blade-和角色","aria-hidden":"true"}},[e._v("#")]),e._v(" Blade 和角色")]),e._v(" "),s("p",[e._v("测试一个特定的角色：")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("@role('writer')\n    I am a writer!\n@else\n    I am not a writer...\n@endrole\n")])])]),s("p",[e._v("同上")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("@hasrole('writer')\n    I am a writer!\n@else\n    I am not a writer...\n@endhasrole\n")])])]),s("p",[e._v("测试列表中的任何角色：")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("@hasanyrole($collectionOfRoles)\n    I have one or more of these roles!\n@else\n    I have none of these roles...\n@endhasanyrole\n// or\n@hasanyrole('writer|admin')\n    I am either a writer or an admin or both!\n@else\n    I have none of these roles...\n@endhasanyrole\n")])])]),s("p",[e._v("测试所有角色：")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("@hasallroles($collectionOfRoles)\n    I have all of these roles!\n@else\n    I do not have all of these roles...\n@endhasallroles\n// or\n@hasallroles('writer|admin')\n    I am both a writer and an admin!\n@else\n    I do not have all of these roles...\n@endhasallroles\n")])])]),s("h4",{attrs:{id:"blade-和权限"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#blade-和权限","aria-hidden":"true"}},[e._v("#")]),e._v(" Blade 和权限")]),e._v(" "),s("p",[e._v("此软件包不会添加任何特定于权限的 Blade 指令。 因此，使用 Laravel 原生的 "),s("code",[e._v("@can")]),e._v(" 指令来检查用户是否具有某种权限。")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("@can('edit articles')\n  //\n@endcan\n")])])]),s("p",[e._v("or")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("@if(auth()->user()->can('edit articles') && $some_other_condition)\n  //\n@endif\n")])])]),s("h2",{attrs:{id:"图片处理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#图片处理","aria-hidden":"true"}},[e._v("#")]),e._v(" 图片处理")]),e._v(" "),s("h3",{attrs:{id:"spatie-image"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spatie-image","aria-hidden":"true"}},[e._v("#")]),e._v(" spatie/image")]),e._v(" "),s("p",[e._v("https://docs.spatie.be/image/v1/usage/basic-usage  用于提供丰富的图片处理方式")]),e._v(" "),s("h3",{attrs:{id:"intervention-image"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#intervention-image","aria-hidden":"true"}},[e._v("#")]),e._v(" Intervention/image")]),e._v(" "),s("p",[e._v("https://github.com/Intervention/image 用于裁切缩放等图片处理操作")]),e._v(" "),s("p",[e._v("安装")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v(' $ composer require intervention/image\n $ php artisan vendor:publish --provider="Intervention\\Image\\ImageServiceProviderLaravel5"\n')])])]),s("p",[e._v("使用")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("$img = Image::make('public/foo.jpg');\n//只设置高亮标准\n$img->resize(null, 400, function ($constraint) {\n\t//维护比例\n    $constraint->aspectRatio();\n    //防止变大\n    $constraint->upsize();\n});\n$img->save($file);\n")])])]),s("h3",{attrs:{id:"spatie-image-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spatie-image-2","aria-hidden":"true"}},[e._v("#")]),e._v(" spatie/image")]),e._v(" "),s("p",[e._v("https://github.com/spatie/image")]),e._v(" "),s("h2",{attrs:{id:"日期处理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#日期处理","aria-hidden":"true"}},[e._v("#")]),e._v(" 日期处理")]),e._v(" "),s("p",[e._v("https://carbon.nesbot.com/  无需安装Laravel已经内置。")]),e._v(" "),s("p",[e._v("中文文档：https://segmentfault.com/a/1190000012716974#articleHeader2")]),e._v(" "),s("p",[e._v("下面是中文本地化的设置：")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("$user->created_at->diffForHumans()\n")])])]),s("p",[e._v("在 "),s("code",[e._v("app/Providers/AppServiceProvider.php")]),e._v("  的 "),s("code",[e._v("boot")]),e._v("方法中设置：")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("\\Carbon\\Carbon::setLocale('zh');\n")])])]),s("h2",{attrs:{id:"debugbar"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#debugbar","aria-hidden":"true"}},[e._v("#")]),e._v(" Debugbar")]),e._v(" "),s("p",[e._v("https://github.com/barryvdh/laravel-debugbar")]),e._v(" "),s("p",[s("strong",[e._v("安装")])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("composer require barryvdh/laravel-debugbar --dev\n")])])]),s("p",[e._v("修改 "),s("code",[e._v(".env")]),e._v(" 配置文件")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("DEBUGBAR_ENABLED=true\n")])])]),s("h2",{attrs:{id:"模块化设计"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#模块化设计","aria-hidden":"true"}},[e._v("#")]),e._v(" 模块化设计")]),e._v(" "),s("p",[e._v("https://nwidart.com/laravel-modules/v4/installation-and-setup")]),e._v(" "),s("h2",{attrs:{id:"webpack"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#webpack","aria-hidden":"true"}},[e._v("#")]),e._v(" webpack")]),e._v(" "),s("p",[e._v("laravel前端使用webpack工具构建，我们介绍几个常用动作")]),e._v(" "),s("p",[e._v("复制目录")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("mix.copyDirectory('assets/img', 'public/img');\n")])])]),s("h2",{attrs:{id:"doctrine-dbal"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#doctrine-dbal","aria-hidden":"true"}},[e._v("#")]),e._v(" Doctrine/dbal")]),e._v(" "),s("p",[e._v("dbal 是用于管理数据表结构的组件库。")]),e._v(" "),s("p",[e._v("在线文档：https://www.doctrine-project.org/projects/doctrine-dbal/en/latest/reference/schema-manager.html#schema-manager")]),e._v(" "),s("h2",{attrs:{id:"active-状态"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#active-状态","aria-hidden":"true"}},[e._v("#")]),e._v(" Active 状态")]),e._v(" "),s("p",[e._v("在我们构建页面的过程中，经常会根据 url 的参数设置页面元素的 "),s("code",[e._v("active")]),e._v(" 属性，将其渲染为「选中」状态。")]),e._v(" "),s("p",[e._v("官网 https://www.hieule.info/products/laravel-active-version-3-released")]),e._v(" "),s("p",[s("strong",[e._v("安装")])]),e._v(" "),s("p",[e._v("Require this package as your dependencies:")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("composer require hieu-le/active\n")])])]),s("p",[e._v("Append this line to your "),s("code",[e._v("providers")]),e._v(" array in "),s("code",[e._v("config/app.php")])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("HieuLe\\Active\\ActiveServiceProvider::class,\n")])])]),s("p",[e._v("Append this line to your "),s("code",[e._v("aliases")]),e._v(" array in "),s("code",[e._v("config/app.php")])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("'Active' => HieuLe\\Active\\Facades\\Active::class,\n")])])]),s("p",[s("strong",[e._v("语法")])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("function active_class($condition, $activeClass = 'active', $inactiveClass = '')\n")])])]),s("p",[s("strong",[e._v("使用")])]),e._v(" "),s("p",[e._v("此扩展包提供了一批函数让我们更方便的进行 "),s("code",[e._v("$condition")]),e._v(" 判断：")]),e._v(" "),s("ol",[s("li",[e._v("if_uri() - 判断当前的 url 是否满足指定的 url；")]),e._v(" "),s("li",[e._v("if_uri_pattern() - 判断当前的 url 是否含有指定的字符；")]),e._v(" "),s("li",[e._v("if_query() - 判断指定的 GET 变量是否符合设置的值；")]),e._v(" "),s("li",[e._v("if_route() - 判断当前对应的路由是否是指定的路由；")]),e._v(" "),s("li",[e._v("if_route_pattern() - 判断当前的路由是否包含指定的字符；")]),e._v(" "),s("li",[e._v("if_route_param() - 判断当前的 url 有无指定的路由参数。")])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('<a class="{{ active_class(if_route(\'users.index\')) }}" href="">会员</a>\n\n<a class="{{ active_class(if_route(\'cateogry.show\') && if_route_param(\'category\', 1)) }}" href="">实战</a>\n\n<a class="{{ active_class(if_route(\'cateogry.show\') && if_route_param(\'category\', 2)) }}" href="">阶段</a>\n')])])]),s("h2",{attrs:{id:"xss-过滤"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#xss-过滤","aria-hidden":"true"}},[e._v("#")]),e._v(" XSS 过滤")]),e._v(" "),s("p",[e._v("https://github.com/mewebstudio/Purifier")]),e._v(" "),s("p",[e._v("安装")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('composer require mews/purifier\nphp artisan vendor:publish --provider="Mews\\Purifier\\PurifierServiceProvider"\n')])])]),s("p",[e._v("配置文件")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("config/purifier.php\n")])])]),s("p",[e._v("使用")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("clean(Input::get('inputname'),'default');\n")])])]),s("h2",{attrs:{id:"guzzle"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#guzzle","aria-hidden":"true"}},[e._v("#")]),e._v(" Guzzle")]),e._v(" "),s("p",[e._v("Guzzle是一个PHP的HTTP客户端，用来轻而易举地发送请求，并集成到我们的WEB服务上。")]),e._v(" "),s("p",[e._v("http://guzzle-cn.readthedocs.io/zh_CN/latest/")]),e._v(" "),s("h2",{attrs:{id:"sudo-su-用户切换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sudo-su-用户切换","aria-hidden":"true"}},[e._v("#")]),e._v(" sudo-su 用户切换")]),e._v(" "),s("p",[e._v("https://github.com/viacreative/sudo-su")]),e._v(" "),s("p",[e._v("安装软件包")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("composer require viacreative/sudo-su\n")])])]),s("p",[e._v("Add the package's service provider to your app in your project's "),s("code",[e._v("AppServiceProvider")]),e._v(":")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("class AppServiceProvider extends ServiceProvider\n{\n    public function register()\n    {\n        if (config('app.debug')) {\n            $this->app->register('VIACreative\\SudoSu\\ServiceProvider');\n        }\n    }\n}\n")])])]),s("p",[e._v("发布")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("php artisan vendor:publish\n")])])]),s("p",[s("strong",[e._v("配置")])]),e._v(" "),s("p",[e._v("修改配置文件 "),s("code",[e._v("config/sudosu.php")]),e._v(" 添加允许使用的域名后缀")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("'allowed_tlds' => ['dev', 'local','hd'],\n")])])]),s("p",[s("strong",[e._v("guard")])]),e._v(" "),s("p",[e._v("如果用户模型不是User 也需要在配置文件中修改")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("'user_model' => \\Modules\\Admin\\Entities\\Admin::class\n")])])]),s("p",[s("strong",[e._v("使用")])]),e._v(" "),s("p",[e._v("在模板中使用")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("@if (config('app.debug'))\n @include('sudosu::user-selector')\n@endif\n")])])]),s("h2",{attrs:{id:"simditor-编辑器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#simditor-编辑器","aria-hidden":"true"}},[e._v("#")]),e._v(" simditor 编辑器")]),e._v(" "),s("p",[e._v("simditor是一款简单快速的编辑器。")]),e._v(" "),s("p",[e._v("http://simditor.tower.im/")]),e._v(" "),s("p",[e._v("下载 https://github.com/mycolorway/simditor/archive/v2.3.16.zip")]),e._v(" "),s("p",[s("strong",[e._v("配置")])]),e._v(" "),s("ol",[s("li",[s("p",[e._v("复制"),s("code",[e._v("site/assets/scripts")]),e._v(" 目录为Laravel项目的 "),s("code",[e._v("resources/plugin/simditor/scripts")]),e._v(" 目录")])]),e._v(" "),s("li",[s("p",[e._v("复制"),s("code",[e._v("site/assets/styles")]),e._v(" 目录为Laravel项目的 "),s("code",[e._v("resource/plugin/simditor/styles")]),e._v(" 目录")])]),e._v(" "),s("li",[s("p",[e._v("修改 "),s("code",[e._v("webpack.mix.js")])]),e._v(" "),s("div",{staticClass:"language-.mix.copyDirectory('resources/assets/js/simditor','public/js/simditor') extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code")])])])]),e._v(" "),s("p",[e._v(".mix.copy('resources/plugin','public/plugin')\n```")]),e._v(" "),s("p",[e._v("创建控制器")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("artisan make:controller Components/UploadController\n")])])]),s("p",[e._v("下面是控制器内容，使用了 "),s("code",[e._v("UploadService")]),e._v(" 服务（参考上面"),s("code",[e._v("Service 服务化")]),e._v(" 文档）")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('...\nclass UploadController extends Controller\n{\n    public function editorImage(Request $request, UploadService $uploadService)\n    {\n        $file = $uploadService->make($request->upload_file);\n        return [\n            "success"   => true,\n            "msg"       => "上传成功",\n            "file_path" => $file[\'path\'],\n        ];\n    }\n}\n')])])]),s("p",[e._v("配置路由")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("Route::post('upload/image','Components\\UploadController@editorImage')->name('upload.image');\n")])])]),s("p",[s("strong",[e._v("使用")])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("<script type=\"text/javascript\" src=\"{{asset('js/simditor/module.js')}}\"><\/script>\n<script type=\"text/javascript\" src=\"{{asset('js/simditor/hotkeys.js')}}\"><\/script>\n<script type=\"text/javascript\" src=\"{{asset('js/simditor/uploader.js')}}\"><\/script>\n<script type=\"text/javascript\" src=\"{{asset('js/simditor/simditor.js')}}\"><\/script>\n<script>\n\t$(function () {\n\t\tvar editor = new Simditor({\n\t\t\ttextarea: $('#editor'),\n\t\t\tpasteImage: true,\n\t\t\tupload: true,\n\t\t\tupload: {\n\t\t\t\turl: '',\n\t\t\t\tparams: {_token: '{{ csrf_token() }}'},\n\t\t\t\tfileKey: 'upload_file',\n\t\t\t\tconnectionCount: 3,\n\t\t\t\tleaveConfirm: '文件上传中，关闭此页面将取消上传。'\n\t\t\t}\n\t\t});\n\t});\n<\/script>\n")])])]),s("h2",{attrs:{id:"mailhog"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mailhog","aria-hidden":"true"}},[e._v("#")]),e._v(" Mailhog")]),e._v(" "),s("p",[e._v("Mailhog ("),s("code",[e._v("homestead")]),e._v(" 已经内置）可以轻松的抓取到你发送的电子邮件并进行检查，而无需将邮件真正发送给收件人. 开始之前, 请更新你的 "),s("code",[e._v(".env")]),e._v(" 文件并使用如下邮件设置:")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("MAIL_DRIVER=smtp\nMAIL_HOST=localhost\nMAIL_PORT=1025\nMAIL_USERNAME=null\nMAIL_PASSWORD=null\nMAIL_ENCRYPTION=null\n")])])]),s("p",[s("strong",[e._v("访问")])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("http://domain:8025\n")])])]),s("h2",{attrs:{id:"china-area-data"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#china-area-data","aria-hidden":"true"}},[e._v("#")]),e._v(" china-area-data")]),e._v(" "),s("p",[e._v("中国行政区域数据  https://www.npmjs.com/package/china-area-data")]),e._v(" "),s("h2",{attrs:{id:"predis"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#predis","aria-hidden":"true"}},[e._v("#")]),e._v(" predis")]),e._v(" "),s("p",[e._v("redis 队列驱动")]),e._v(" "),s("p",[e._v("Github：https://github.com/nrk/predis")]),e._v(" "),s("h4",{attrs:{id:"安装-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装-2","aria-hidden":"true"}},[e._v("#")]),e._v(" 安装")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('composer require "predis/predis:~1.0"\n')])])]),s("h2",{attrs:{id:"判断设备"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#判断设备","aria-hidden":"true"}},[e._v("#")]),e._v(" 判断设备")]),e._v(" "),s("p",[e._v("判断移动、平板设备等场景还是很常见的。")]),e._v(" "),s("p",[e._v("Github：https://github.com/hisorange/browser-detect")]),e._v(" "),s("h2",{attrs:{id:"宝塔设置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#宝塔设置","aria-hidden":"true"}},[e._v("#")]),e._v(" 宝塔设置")]),e._v(" "),s("p",[s("strong",[e._v("域名设置")])]),e._v(" "),s("p",[e._v("Laravel 使用public 目录访问，需要将域名绑定在public 目录")]),e._v(" "),s("p",[s("img",{attrs:{src:"assets/image-20180727145019669.png",alt:"image-20180727145019669"}})]),e._v(" "),s("p",[s("strong",[e._v("打包上传")])]),e._v(" "),s("ol",[s("li",[e._v("将本地 Laravel 项目打成zip包")]),e._v(" "),s("li",[e._v("在宝塔中的文件菜单选择你的网站目录，然后上传zip文件")]),e._v(" "),s("li",[e._v("上传后解压释放即可")])]),e._v(" "),s("p",[s("strong",[e._v("伪静态")])]),e._v(" "),s("p",[e._v("在网站菜单选择需要修改的网站，进行以下设置")]),e._v(" "),s("p",[s("img",{attrs:{src:t(248),alt:"image-20180727144658866"}})]),e._v(" "),s("p",[s("strong",[e._v("Mysql")])]),e._v(" "),s("p",[e._v("宝塔的mysql版本低，运行会出错。")]),e._v(" "),s("ol",[s("li",[s("p",[e._v("先在宝塔后台升级mysql")])]),e._v(" "),s("li",[s("p",[e._v("在Laravel 的 AppServiceProvider.php 文件里的 boot 方法里设置")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("public function boot()\n{\n \t\\Schema::defaultStringLength(191);\n}\n")])])])])]),e._v(" "),s("h2",{attrs:{id:"常见错误"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常见错误","aria-hidden":"true"}},[e._v("#")]),e._v(" 常见错误")]),e._v(" "),s("ol",[s("li",[e._v("有时执行 composer 意外中断或卡住，删除 vendor与composer.lock 后重新执行")]),e._v(" "),s("li",[e._v("使用模块化开发时模块下的 node_modules 严重影响 composer 执行，可以先删除模块下的node_modules 再执行 composer install 、composer dumpautoload 等命令")])])])},[],!1,null,null,null);a.default=r.exports},69:function(e,a,t){e.exports=t.p+"assets/img/1525702644734-9243316.3ac2b4d9.png"},70:function(e,a,t){e.exports=t.p+"assets/img/1525702747114-9243263.4d2f8a2b.png"}}]);